parameter (or (or (or (unit %accept_admin) (pair %batchSwap (pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender)))) (pair (string %kind) (pair (map %limits nat int) (map %swaps nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat)))))))) (or (pair %exitPool (pair (pair %poolId address nat) (address %recipient)) (pair (pair %request (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat)))))) (address %sender))) (pair %joinPool (pair (pair %poolId address nat) (address %recipient)) (pair (pair %request (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %allT nat) (pair (option %amountsIn (map nat nat)) (string %kind))) (pair (option %minSPTAmountOut nat) (pair (option %sptAmountOut nat) (option %tokenIndex nat)))))) (address %sender))))) (or (or (unit %registerPool) (pair %registerTokens (option %assetManagers (map nat address)) (pair (pair %poolId address nat) (map %tokens nat (pair address (option nat)))))) (or (bool %set_paused) (or (pair %swap (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) (pair (nat %limit) (pair %singleSwap (pair (nat %amount) (pair %assetIn address (option nat))) (pair (pair %assetOut address (option nat)) (pair (string %kind) (pair %poolId address nat)))))) (address %transfer_admin)))));
storage   (pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))));
code
  {
    # Private variable: _castToInt # pair @parameter @storage
    LAMBDA
      (pair (map nat nat) bool)
      (map nat int)
      {
        # compute_PoolBalances_240 = sp.local("compute_PoolBalances_240", {}) # pair (map nat nat) bool
        EMPTY_MAP nat int; # map nat int : pair (map nat nat) bool
        # for i in sp.range(0, sp.len(_x0.amounts)): ... (sp.TNat) # map nat int : pair (map nat nat) bool
        DUP 2;      # pair (map nat nat) bool : map nat int : pair (map nat nat) bool
        CAR;        # map nat nat : map nat int : pair (map nat nat) bool
        SIZE;       # nat : map nat int : pair (map nat nat) bool
        PUSH nat 0; # nat : nat : map nat int : pair (map nat nat) bool
        DUP;        # nat : nat : nat : map nat int : pair (map nat nat) bool
        DUP 3;      # nat : nat : nat : nat : map nat int : pair (map nat nat) bool
        COMPARE;    # int : nat : nat : map nat int : pair (map nat nat) bool
        GT;         # bool : nat : nat : map nat int : pair (map nat nat) bool
        LOOP
          {
            # if _x0.positive: # nat : nat : map nat int : pair (map nat nat) bool
            DUP 4;      # pair (map nat nat) bool : nat : nat : map nat int : pair (map nat nat) bool
            CDR;        # bool : nat : nat : map nat int : pair (map nat nat) bool
            IF
              {
                # compute_PoolBalances_240.value[i] = sp.to_int(_x0.amounts[i]) # nat : nat : map nat int : pair (map nat nat) bool
                DIG 2;      # map nat int : nat : nat : pair (map nat nat) bool
                DUP 4;      # pair (map nat nat) bool : map nat int : nat : nat : pair (map nat nat) bool
                CAR;        # map nat nat : map nat int : nat : nat : pair (map nat nat) bool
                DUP 3;      # nat : map nat nat : map nat int : nat : nat : pair (map nat nat) bool
                GET;        # option nat : map nat int : nat : nat : pair (map nat nat) bool
                IF_NONE
                  {
                    PUSH int 243; # int : map nat int : nat : nat : pair (map nat nat) bool
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : map nat int : nat : nat : pair (map nat nat) bool
                INT;        # int : map nat int : nat : nat : pair (map nat nat) bool
                SOME;       # option int : map nat int : nat : nat : pair (map nat nat) bool
                DUP 3;      # nat : option int : map nat int : nat : nat : pair (map nat nat) bool
                UPDATE;     # map nat int : nat : nat : pair (map nat nat) bool
                DUG 2;      # nat : nat : map nat int : pair (map nat nat) bool
              }
              {
                # compute_PoolBalances_240.value[i] = - sp.to_int(_x0.amounts[i]) # nat : nat : map nat int : pair (map nat nat) bool
                DIG 2;      # map nat int : nat : nat : pair (map nat nat) bool
                DUP 4;      # pair (map nat nat) bool : map nat int : nat : nat : pair (map nat nat) bool
                CAR;        # map nat nat : map nat int : nat : nat : pair (map nat nat) bool
                DUP 3;      # nat : map nat nat : map nat int : nat : nat : pair (map nat nat) bool
                GET;        # option nat : map nat int : nat : nat : pair (map nat nat) bool
                IF_NONE
                  {
                    PUSH int 245; # int : map nat int : nat : nat : pair (map nat nat) bool
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : map nat int : nat : nat : pair (map nat nat) bool
                INT;        # int : map nat int : nat : nat : pair (map nat nat) bool
                NEG;        # int : map nat int : nat : nat : pair (map nat nat) bool
                SOME;       # option int : map nat int : nat : nat : pair (map nat nat) bool
                DUP 3;      # nat : option int : map nat int : nat : nat : pair (map nat nat) bool
                UPDATE;     # map nat int : nat : nat : pair (map nat nat) bool
                DUG 2;      # nat : nat : map nat int : pair (map nat nat) bool
              }; # nat : nat : map nat int : pair (map nat nat) bool
            # loop step # nat : nat : map nat int : pair (map nat nat) bool
            PUSH nat 1; # nat : nat : nat : map nat int : pair (map nat nat) bool
            ADD;        # nat : nat : map nat int : pair (map nat nat) bool
            DUP;        # nat : nat : nat : map nat int : pair (map nat nat) bool
            DUP 3;      # nat : nat : nat : nat : map nat int : pair (map nat nat) bool
            COMPARE;    # int : nat : nat : map nat int : pair (map nat nat) bool
            GT;         # bool : nat : nat : map nat int : pair (map nat nat) bool
          }; # nat : nat : map nat int : pair (map nat nat) bool
        DROP 2;     # map nat int : pair (map nat nat) bool
        SWAP;       # pair (map nat nat) bool : map nat int
        DROP;       # map nat int
        # sp.result(compute_PoolBalances_240.value) # map nat int
      }; # lambda (pair (map nat nat) bool) (map nat int) : pair @parameter @storage
    SWAP;       # pair @parameter @storage : lambda (pair (map nat nat) bool) (map nat int)
    # Private variable: _validateTokensAndGetBalances # pair @parameter @storage : lambda (pair (map nat nat) bool) (map nat int)
    LAMBDA
      (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
      (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
      {
        UNPAIR;     # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        # sp.verify(sp.len(_x2.expectedTokens) == sp.len(_x2.limits)) # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        DUP;        # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        GET 3;      # map nat nat : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        SIZE;       # nat : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        DUP 2;      # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : nat : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        CAR;        # map nat (pair address (option nat)) : nat : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        SIZE;       # nat : nat : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        COMPARE;    # int : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        EQ;         # bool : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        IF
          {}
          {
            PUSH string "WrongCondition: sp.len(_x2.expectedTokens) == sp.len(_x2.limits)"; # string : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            FAILWITH;   # FAILED
          }; # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        # compute_PoolTokens_91 = sp.local("compute_PoolTokens_91", {}, sp.TMap(sp.TNat, sp.TPair(sp.TAddress, sp.TOption(sp.TNat)))) # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        EMPTY_MAP nat (pair address (option nat)); # map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        # compute_PoolTokens_92 = sp.local("compute_PoolTokens_92", {}, sp.TMap(sp.TNat, sp.TPair(sp.TNat, sp.TNat))) # map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        EMPTY_MAP nat (pair nat nat); # map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        # for i in sp.range(0, sp.len(self.data.poolsTokens[_x2.poolId])): ... (sp.TNat) # map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        DUP 4;      # pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        GET 3;      # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        CDR;        # big_map (pair address nat) (map nat (pair address (option nat))) : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        DUP 4;      # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        GET 4;      # pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        GET;        # option (map nat (pair address (option nat))) : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        IF_NONE
          {
            PUSH int 90; # int : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            FAILWITH;   # FAILED
          }
          {}; # @some : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        SIZE;       # nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        PUSH nat 0; # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        DUP;        # nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        DUP 3;      # nat : nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        COMPARE;    # int : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        GT;         # bool : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        LOOP
          {
            # compute_PoolTokens_91.value[i] = self.data.poolsTokens[_x2.poolId][i] # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DIG 3;      # map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP 6;      # pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            GET 3;      # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            CDR;        # big_map (pair address nat) (map nat (pair address (option nat))) : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP 6;      # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            GET 4;      # pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            GET;        # option (map nat (pair address (option nat))) : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            IF_NONE
              {
                PUSH int 90; # int : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                FAILWITH;   # FAILED
              }
              {}; # @some : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP 3;      # nat : @some : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            GET;        # option (pair address (option nat)) : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            IF_NONE
              {
                PUSH int 96; # int : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                FAILWITH;   # FAILED
              }
              {}; # @some : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            SOME;       # option (pair address (option nat)) : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP 3;      # nat : option (pair address (option nat)) : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            UPDATE;     # map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUG 3;      # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            # compute_PoolTokens_92.value[i] = self.data.poolsBalances.get(_x2.poolId, default_value = {}).get(self.data.poolsTokens[_x2.poolId][i], default_value = (0, 0)) # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DIG 2;      # map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP 6;      # pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            GET 3;      # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP 6;      # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            GET 4;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            GET;        # option (map (pair address (option nat)) (pair nat nat)) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            IF_NONE
              {
                EMPTY_MAP (pair address (option nat)) (pair nat nat); # map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
              }
              {}; # map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP 7;      # pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            GET 3;      # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            CDR;        # big_map (pair address nat) (map nat (pair address (option nat))) : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP 7;      # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            GET 4;      # pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            GET;        # option (map nat (pair address (option nat))) : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            IF_NONE
              {
                PUSH int 90; # int : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                FAILWITH;   # FAILED
              }
              {}; # @some : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP 4;      # nat : @some : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            GET;        # option (pair address (option nat)) : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            IF_NONE
              {
                PUSH int 96; # int : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                FAILWITH;   # FAILED
              }
              {}; # @some : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            GET;        # option (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            IF_NONE
              {
                PUSH (pair nat nat) (Pair 0 0); # pair nat nat : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
              }
              {}; # pair nat nat : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            SOME;       # option (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP 3;      # nat : option (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            UPDATE;     # map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUG 2;      # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            # loop step # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            PUSH nat 1; # nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            ADD;        # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP;        # nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP 3;      # nat : nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            COMPARE;    # int : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            GT;         # bool : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
          }; # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        DROP 2;     # map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        # sp.verify(sp.len(compute_PoolTokens_91.value) == sp.len(_x2.expectedTokens)) # map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        DUP 3;      # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        CAR;        # map nat (pair address (option nat)) : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        SIZE;       # nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        DUP 3;      # map nat (pair address (option nat)) : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        SIZE;       # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        COMPARE;    # int : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        EQ;         # bool : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        IF
          {}
          {
            PUSH string "WrongCondition: sp.len(compute_PoolTokens_91.value) == sp.len(_x2.expectedTokens)"; # string : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            FAILWITH;   # FAILED
          }; # map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        # sp.verify(sp.len(compute_PoolTokens_91.value) > 0, 527) # map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        PUSH nat 0; # nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        DUP 3;      # map nat (pair address (option nat)) : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        SIZE;       # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        COMPARE;    # int : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        GT;         # bool : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        IF
          {}
          {
            PUSH int 527; # int : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            FAILWITH;   # FAILED
          }; # map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        # for i in sp.range(0, sp.len(compute_PoolTokens_91.value)): ... (sp.TNat) # map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        DUP 2;      # map nat (pair address (option nat)) : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        SIZE;       # nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        PUSH nat 0; # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        DUP;        # nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        DUP 3;      # nat : nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        COMPARE;    # int : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        GT;         # bool : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        LOOP
          {
            # sp.verify(compute_PoolTokens_91.value[i] == _x2.expectedTokens[i], 520) # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP 5;      # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            CAR;        # map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP 2;      # nat : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            GET;        # option (pair address (option nat)) : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            IF_NONE
              {
                PUSH int 234; # int : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                FAILWITH;   # FAILED
              }
              {}; # @some : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP 5;      # map nat (pair address (option nat)) : @some : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP 3;      # nat : map nat (pair address (option nat)) : @some : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            GET;        # option (pair address (option nat)) : @some : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            IF_NONE
              {
                PUSH int 233; # int : @some : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                FAILWITH;   # FAILED
              }
              {}; # @some : @some : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            COMPARE;    # int : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            EQ;         # bool : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            IF
              {}
              {
                PUSH int 520; # int : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                FAILWITH;   # FAILED
              }; # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            # loop step # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            PUSH nat 1; # nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            ADD;        # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP;        # nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            DUP 3;      # nat : nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            COMPARE;    # int : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
            GT;         # bool : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
          }; # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        DROP 2;     # map nat (pair nat nat) : map nat (pair address (option nat)) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        SWAP;       # map nat (pair address (option nat)) : map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        DROP;       # map nat (pair nat nat) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        SWAP;       # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : map nat (pair nat nat) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        DROP;       # map nat (pair nat nat) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        # sp.result(compute_PoolTokens_92.value) # map nat (pair nat nat) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
        PAIR;       # pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))
      }; # lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : pair @parameter @storage : lambda (pair (map nat nat) bool) (map nat int)
    SWAP;       # pair @parameter @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
    UNPAIR;     # @parameter : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
    IF_LEFT
      {
        IF_LEFT
          {
            DIG 3;      # lambda (pair (map nat nat) bool) (map nat int) : @parameter.left.left : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
            DROP;       # @parameter.left.left : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
            IF_LEFT
              {
                DROP;       # @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                SWAP;       # lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @storage
                DROP;       # @storage
                # == accept_admin ==
                # sp.verify(sp.some(sp.sender) == self.data.proposed_admin, 'NOT_PROPOSED_ADMIN') # @storage
                DUP;        # @storage : @storage
                GET 5;      # option address : @storage
                SENDER;     # @sender : option address : @storage
                SOME;       # option address : option address : @storage
                COMPARE;    # int : @storage
                EQ;         # bool : @storage
                IF
                  {}
                  {
                    PUSH string "NOT_PROPOSED_ADMIN"; # string : @storage
                    FAILWITH;   # FAILED
                  }; # @storage
                # self.data.admin = sp.sender # @storage
                UNPAIR;     # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))
                UNPAIR;     # pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit) : pair (big_map %metadata string bytes) (nat %nextPoolNonce) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))
                CDR;        # big_map (pair address nat) unit : pair (big_map %metadata string bytes) (nat %nextPoolNonce) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))
                SENDER;     # @sender : big_map (pair address nat) unit : pair (big_map %metadata string bytes) (nat %nextPoolNonce) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))
                PAIR;       # pair @sender (big_map (pair address nat) unit) : pair (big_map %metadata string bytes) (nat %nextPoolNonce) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))
                PAIR;       # pair (pair @sender (big_map (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))
                PAIR;       # pair (pair (pair @sender (big_map (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                # self.data.proposed_admin = sp.none # pair (pair (pair @sender (big_map (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                NONE address; # option address : pair (pair (pair @sender (big_map (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                UPDATE 5;   # pair (pair (pair @sender (big_map (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                NIL operation; # list operation : pair (pair (pair @sender (big_map (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
              }
              {
                # == batchSwap ==
                # sp.verify(self.data.settings.paused == False, 'ONLY_UNPAUSED') # @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                PUSH bool False; # bool : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DUP 3;      # @storage : bool : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                GET 6;      # bool : bool : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                COMPARE;    # int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                EQ;         # bool : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                IF
                  {}
                  {
                    PUSH string "ONLY_UNPAUSED"; # string : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    FAILWITH;   # FAILED
                  }; # @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                # sp.verify(sp.now <= params.deadline, 508) # @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DUP;        # @parameter%batchSwap : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                GET 3;      # timestamp : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                NOW;        # @now : timestamp : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                COMPARE;    # int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                LE;         # bool : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                IF
                  {}
                  {
                    PUSH int 508; # int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    FAILWITH;   # FAILED
                  }; # @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                # sp.verify(sp.len(params.assets) == sp.len(params.limits), 103) # @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DUP;        # @parameter%batchSwap : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                GET 5;      # map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                SIZE;       # nat : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DUP 2;      # @parameter%batchSwap : nat : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : nat : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                CAR;        # map nat (pair address (option nat)) : nat : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                SIZE;       # nat : nat : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                COMPARE;    # int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                EQ;         # bool : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                IF
                  {}
                  {
                    PUSH int 103; # int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    FAILWITH;   # FAILED
                  }; # @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                # compute_Swaps_147 = sp.local("compute_Swaps_147", {}, sp.TMap(sp.TNat, sp.TInt)) # @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                EMPTY_MAP nat int; # map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                # previousTokenCalculated = sp.local("previousTokenCalculated", (sp.address('tz1burnburnburnburnburnburnburjAYjjX'), sp.none)) # map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                PUSH (pair address (option nat)) (Pair "tz1burnburnburnburnburnburnburjAYjjX" None); # pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                # previousAmountCalculated = sp.local("previousAmountCalculated", 0) # pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                PUSH nat 0; # nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                # for i in sp.range(0, sp.len(params.swaps)): ... (sp.TNat) # nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                NIL operation; # list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DUP 5;      # @parameter%batchSwap : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                SIZE;       # nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                PUSH nat 0; # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DUP;        # nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DUP 3;      # nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                COMPARE;    # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                GT;         # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                LOOP
                  {
                    # sp.verify((params.swaps[i].assetInIndex < sp.len(params.assets)) & (params.swaps[i].assetOutIndex < sp.len(params.assets)), 100) # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 7;      # @parameter%batchSwap : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SIZE;       # nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 8;      # @parameter%batchSwap : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 3;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 155; # int : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (nat %amount) (nat %assetInIndex) : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    COMPARE;    # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    LT;         # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF
                      {
                        DUP 7;      # @parameter%batchSwap : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        CAR;        # map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        SIZE;       # nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 8;      # @parameter%batchSwap : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 3;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF_NONE
                          {
                            PUSH int 156; # int : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GET 3;      # nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        COMPARE;    # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        LT;         # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                      }
                      {
                        PUSH bool False; # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                      }; # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF
                      {}
                      {
                        PUSH int 100; # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }; # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # sp.verify(params.assets[params.swaps[i].assetInIndex] != params.assets[params.swaps[i].assetOutIndex], 509) # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 7;      # @parameter%batchSwap : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 8;      # @parameter%batchSwap : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 3;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # nat : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 8;      # @parameter%batchSwap : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 9;      # @parameter%batchSwap : map nat (pair address (option nat)) : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 4;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : map nat (pair address (option nat)) : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (nat %amount) (nat %assetInIndex) : map nat (pair address (option nat)) : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # nat : map nat (pair address (option nat)) : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    COMPARE;    # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    NEQ;        # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF
                      {}
                      {
                        PUSH int 509; # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }; # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # amount = sp.local("amount", params.swaps[i].amount) # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 7;      # @parameter%batchSwap : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 2;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 164; # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (nat %amount) (nat %assetInIndex) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # if params.swaps[i].amount == 0: # nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PUSH nat 0; # nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 9;      # @parameter%batchSwap : nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 4;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 166; # int : nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (nat %amount) (nat %assetInIndex) : nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # nat : nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    COMPARE;    # int : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    EQ;         # bool : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF
                      {
                        DROP;       # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        # sp.verify(i > 0, 510) # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        PUSH nat 0; # nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 2;      # nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        COMPARE;    # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GT;         # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF
                          {}
                          {
                            PUSH int 510; # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            FAILWITH;   # FAILED
                          }; # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        # compute_Swaps_168 = sp.local("compute_Swaps_168", sp.eif(params.kind == 'GIVEN_IN', params.assets[params.swaps[i].assetInIndex], params.assets[params.swaps[i].assetOutIndex])) # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        PUSH string "GIVEN_IN"; # string : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 8;      # @parameter%batchSwap : string : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GET 3;      # string : string : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        COMPARE;    # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        EQ;         # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF
                          {
                            DUP 7;      # @parameter%batchSwap : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 8;      # @parameter%batchSwap : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 3;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 160; # int : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # pair (nat %amount) (nat %assetInIndex) : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CDR;        # nat : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET;        # option (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 160; # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                          }
                          {
                            DUP 7;      # @parameter%batchSwap : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 8;      # @parameter%batchSwap : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 3;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 161; # int : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET 3;      # nat : map nat (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET;        # option (pair address (option nat)) : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 161; # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                          }; # @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        # sp.verify(previousTokenCalculated.value == compute_Swaps_168.value, 511) # @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DIG 5;      # pair address (option nat) : @some : nat : nat : list operation : nat : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        COMPARE;    # int : nat : nat : list operation : nat : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        EQ;         # bool : nat : nat : list operation : nat : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF
                          {}
                          {
                            PUSH int 511; # int : nat : nat : list operation : nat : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            FAILWITH;   # FAILED
                          }; # nat : nat : list operation : nat : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        # amount.value = previousAmountCalculated.value # nat : nat : list operation : nat : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DIG 3;      # nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                      }
                      {
                        DIG 4;      # nat : nat : nat : nat : list operation : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DROP;       # nat : nat : nat : list operation : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DIG 4;      # pair address (option nat) : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DROP;       # nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                      }; # nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # compute_Swaps_260 = sp.local("compute_Swaps_260", sp.view("onSwap", sp.record(balanceTokenIn = sp.fst(self.data.poolsBalances.get(params.swaps[i].poolId, message = 500).get(params.assets[params.swaps[i].assetInIndex], message = 521)) + sp.snd(self.data.poolsBalances.get(params.swaps[i].poolId, message = 500).get(params.assets[params.swaps[i].assetInIndex], message = 521)), balanceTokenOut = sp.fst(self.data.poolsBalances.get(params.swaps[i].poolId, message = 500).get(params.assets[params.swaps[i].assetOutIndex], message = 521)) + sp.snd(self.data.poolsBalances.get(params.swaps[i].poolId, message = 500).get(params.assets[params.swaps[i].assetOutIndex], message = 521)), request = sp.record(amount = amount.value, kind = params.kind, tokenIn = params.assets[params.swaps[i].assetInIndex], tokenOut = params.assets[params.swaps[i].assetOutIndex])), sp.fst(params.swaps[i].poolId), sp.TNat).open_some(message = 'Invalid view')) # nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 6;      # @parameter%batchSwap : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 3;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 176; # int : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 5;      # address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 7;      # @parameter%batchSwap : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 8;      # @parameter%batchSwap : map nat (pair address (option nat)) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 5;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : map nat (pair address (option nat)) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # nat : map nat (pair address (option nat)) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 8;      # @parameter%batchSwap : @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 9;      # @parameter%batchSwap : map nat (pair address (option nat)) : @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 6;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : map nat (pair address (option nat)) : @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (nat %amount) (nat %assetInIndex) : map nat (pair address (option nat)) : @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # nat : map nat (pair address (option nat)) : @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair @some @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 8;      # @parameter%batchSwap : pair @some @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # string : pair @some @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 4;      # nat : string : pair @some @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair nat string : pair @some @some : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 9;      # @storage : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 9;      # @parameter%batchSwap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 6;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 176; # int : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 4;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 500; # int : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 9;      # @parameter%batchSwap : @some : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : @some : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : @some : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 10;     # @parameter%batchSwap : map nat (pair address (option nat)) : @some : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 7;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : map nat (pair address (option nat)) : @some : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : @some : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # nat : map nat (pair address (option nat)) : @some : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : @some : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : @some : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair nat nat) : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 521; # int : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 10;     # @storage : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 10;     # @parameter%batchSwap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 7;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 176; # int : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 4;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 500; # int : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 10;     # @parameter%batchSwap : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 11;     # @parameter%batchSwap : map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 8;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # nat : map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair nat nat) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 521; # int : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    ADD;        # nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 10;     # @storage : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 10;     # @parameter%batchSwap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 7;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 176; # int : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 4;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 500; # int : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 10;     # @parameter%batchSwap : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 11;     # @parameter%batchSwap : map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 8;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (nat %amount) (nat %assetInIndex) : map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # nat : map nat (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair nat nat) : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 521; # int : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 11;     # @storage : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 11;     # @parameter%batchSwap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 8;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 176; # int : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 4;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 500; # int : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 11;     # @parameter%batchSwap : @some : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : @some : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : @some : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 12;     # @parameter%batchSwap : map nat (pair address (option nat)) : @some : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 9;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : map nat (pair address (option nat)) : @some : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : @some : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (nat %amount) (nat %assetInIndex) : map nat (pair address (option nat)) : @some : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # nat : map nat (pair address (option nat)) : @some : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : @some : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : @some : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair nat nat) : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 521; # int : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # nat : nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    ADD;        # nat : nat : pair (pair nat string) (pair @some @some) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR 3;     # pair nat (pair nat (pair (pair nat string) (pair @some @some))) : address : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    VIEW "onSwap" nat; # option nat : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH string "Invalid view"; # string : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # compute_Swaps_263 = sp.local("compute_Swaps_263", sp.eif(params.kind == 'GIVEN_IN', (amount.value, compute_Swaps_260.value), (compute_Swaps_260.value, amount.value))) # @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PUSH string "GIVEN_IN"; # string : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 8;      # @parameter%batchSwap : string : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # string : string : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    COMPARE;    # int : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    EQ;         # bool : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF
                      {
                        DUP;        # @some : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 3;      # nat : @some : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        PAIR;       # pair nat @some : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                      }
                      {
                        DUP 2;      # nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 2;      # @some : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        PAIR;       # pair @some nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                      }; # pair nat nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # match_pair_Swaps_263_fst, match_pair_Swaps_263_snd = sp.match_tuple(compute_Swaps_263.value, "match_pair_Swaps_263_fst", "match_pair_Swaps_263_snd") # pair nat nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    UNPAIR;     # nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # self.data.poolsBalances[params.swaps[i].poolId][params.assets[params.swaps[i].assetInIndex]] = (sp.fst(self.data.poolsBalances.get(params.swaps[i].poolId, message = 500).get(params.assets[params.swaps[i].assetInIndex], message = 521)) + match_pair_Swaps_263_fst, sp.snd(self.data.poolsBalances.get(params.swaps[i].poolId, message = 500).get(params.assets[params.swaps[i].assetInIndex], message = 521))) # nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 10;     # @storage : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    UNPAIR;     # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SWAP;       # pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    UNPAIR;     # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    UNPAIR;     # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 14;     # @parameter%batchSwap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 11;     # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 176; # int : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 4;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP;        # pair address nat : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUG 2;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 238; # int : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 16;     # @storage : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 16;     # @parameter%batchSwap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 13;     # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 176; # int : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 4;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 500; # int : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 16;     # @parameter%batchSwap : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 17;     # @parameter%batchSwap : map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 14;     # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (nat %amount) (nat %assetInIndex) : map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # nat : map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 521; # int : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DIG 7;      # nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DIG 16;     # @storage : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 17;     # @parameter%batchSwap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 14;     # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 176; # int : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 4;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 500; # int : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 17;     # @parameter%batchSwap : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 18;     # @parameter%batchSwap : map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 15;     # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (nat %amount) (nat %assetInIndex) : map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # nat : map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair nat nat) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 521; # int : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # nat : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    ADD;        # nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair nat nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SOME;       # option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 15;     # @parameter%batchSwap : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 16;     # @parameter%batchSwap : map nat (pair address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 13;     # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : map nat (pair address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (nat %amount) (nat %assetInIndex) : map nat (pair address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # nat : map nat (pair address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    UPDATE;     # map (pair address (option nat)) (pair nat nat) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SOME;       # option (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SWAP;       # pair address nat : option (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    UPDATE;     # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SWAP;       # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUG 8;      # nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # self.data.poolsBalances[params.swaps[i].poolId][params.assets[params.swaps[i].assetOutIndex]] = (sp.as_nat(sp.fst(self.data.poolsBalances.get(params.swaps[i].poolId, message = 500).get(params.assets[params.swaps[i].assetOutIndex], message = 521)) - match_pair_Swaps_263_snd), sp.snd(self.data.poolsBalances.get(params.swaps[i].poolId, message = 500).get(params.assets[params.swaps[i].assetOutIndex], message = 521))) # nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 9;      # pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    UNPAIR;     # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SWAP;       # pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    UNPAIR;     # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    UNPAIR;     # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 13;     # @parameter%batchSwap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 10;     # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 176; # int : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 4;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP;        # pair address nat : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUG 2;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 239; # int : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 15;     # pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 15;     # @parameter%batchSwap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 12;     # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 176; # int : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 4;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 500; # int : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 15;     # @parameter%batchSwap : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 16;     # @parameter%batchSwap : map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 13;     # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # nat : map nat (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 521; # int : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DIG 7;      # nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DIG 15;     # pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 16;     # @parameter%batchSwap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 13;     # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 176; # int : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 4;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 500; # int : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 16;     # @parameter%batchSwap : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 17;     # @parameter%batchSwap : map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 14;     # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # nat : map nat (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair nat nat) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 521; # int : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # nat : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SUB;        # int : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    ISNAT;      # option nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 272; # int : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair @some nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SOME;       # option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 14;     # @parameter%batchSwap : option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 15;     # @parameter%batchSwap : map nat (pair address (option nat)) : option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 12;     # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : map nat (pair address (option nat)) : option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # nat : map nat (pair address (option nat)) : option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    UPDATE;     # map (pair address (option nat)) (pair nat nat) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SOME;       # option (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SWAP;       # pair address nat : option (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    UPDATE;     # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SWAP;       # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUG 7;      # @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # match_pair_Swaps_207_fst, match_pair_Swaps_207_snd = sp.match_tuple(sp.eif(params.kind == 'GIVEN_IN', (amount.value, compute_Swaps_260.value), (compute_Swaps_260.value, amount.value)), "match_pair_Swaps_207_fst", "match_pair_Swaps_207_snd") # @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PUSH string "GIVEN_IN"; # string : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 8;      # @parameter%batchSwap : string : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # string : string : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    COMPARE;    # int : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    EQ;         # bool : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF
                      {
                        DUP;        # @some : @some : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DIG 2;      # nat : @some : @some : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        PAIR;       # pair nat @some : @some : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                      }
                      {
                        SWAP;       # nat : @some : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 2;      # @some : nat : @some : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        PAIR;       # pair @some nat : @some : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                      }; # pair nat nat : @some : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    UNPAIR;     # nat : nat : @some : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # sp.emit(sp.record(amountIn = match_pair_Swaps_207_fst, amountOut = match_pair_Swaps_207_snd, poolId = params.swaps[i].poolId, tokenIn = (sp.fst(params.assets[params.swaps[i].assetInIndex]), sp.snd(params.assets[params.swaps[i].assetInIndex])), tokenOut = (sp.fst(params.assets[params.swaps[i].assetOutIndex]), sp.snd(params.assets[params.swaps[i].assetOutIndex]))), tag = "Swap") # nat : nat : @some : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DIG 5;      # list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 8;      # @parameter%batchSwap : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 9;      # @parameter%batchSwap : map nat (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 7;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : map nat (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # nat : map nat (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # option nat : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 9;      # @parameter%batchSwap : option nat : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : option nat : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : option nat : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 10;     # @parameter%batchSwap : map nat (pair address (option nat)) : option nat : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : option nat : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 8;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : option nat : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : option nat : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : map nat (pair address (option nat)) : option nat : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : option nat : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # nat : map nat (pair address (option nat)) : option nat : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : option nat : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 161; # int : option nat : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : option nat : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # address : option nat : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 9;      # @parameter%batchSwap : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 10;     # @parameter%batchSwap : map nat (pair address (option nat)) : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 8;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : map nat (pair address (option nat)) : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (nat %amount) (nat %assetInIndex) : map nat (pair address (option nat)) : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # nat : map nat (pair address (option nat)) : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # option nat : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 10;     # @parameter%batchSwap : option nat : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : option nat : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # map nat (pair address (option nat)) : option nat : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 11;     # @parameter%batchSwap : map nat (pair address (option nat)) : option nat : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : option nat : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 9;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : option nat : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : option nat : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : map nat (pair address (option nat)) : option nat : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair address (option nat)) : option nat : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (nat %amount) (nat %assetInIndex) : map nat (pair address (option nat)) : option nat : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # nat : map nat (pair address (option nat)) : option nat : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair address (option nat)) : option nat : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 160; # int : option nat : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : option nat : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # address : option nat : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair address (option nat) : pair address (option nat) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair (pair address (option nat)) (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 9;      # @parameter%batchSwap : pair (pair address (option nat)) (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : pair (pair address (option nat)) (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 7;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : pair (pair address (option nat)) (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : pair (pair address (option nat)) (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 176; # int : pair (pair address (option nat)) (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair (pair address (option nat)) (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 4;      # pair address nat : pair (pair address (option nat)) (pair address (option nat)) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair (pair address nat) (pair (pair address (option nat)) (pair address (option nat))) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 4;      # nat : pair (pair address nat) (pair (pair address (option nat)) (pair address (option nat))) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 4;      # nat : nat : pair (pair address nat) (pair (pair address (option nat)) (pair address (option nat))) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair nat nat : pair (pair address nat) (pair (pair address (option nat)) (pair address (option nat))) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PAIR;       # pair (pair nat nat) (pair (pair address nat) (pair (pair address (option nat)) (pair address (option nat)))) : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    EMIT %Swap (pair (pair (nat %amountIn) (nat %amountOut)) (pair (pair %poolId address nat) (pair (pair %tokenIn address (option nat)) (pair %tokenOut address (option nat))))); # operation : list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CONS;       # list operation : nat : nat : @some : nat : nat : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUG 5;      # nat : nat : @some : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # previousAmountCalculated.value = compute_Swaps_260.value # nat : nat : @some : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DIG 2;      # @some : nat : nat : nat : nat : list operation : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUG 5;      # nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # compute_Swaps_188 = sp.local("compute_Swaps_188", sp.eif(params.kind == 'GIVEN_IN', params.assets[params.swaps[i].assetOutIndex], params.assets[params.swaps[i].assetInIndex])) # nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PUSH string "GIVEN_IN"; # string : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 9;      # @parameter%batchSwap : string : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # string : string : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    COMPARE;    # int : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    EQ;         # bool : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF
                      {
                        DUP 8;      # @parameter%batchSwap : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        CAR;        # map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 9;      # @parameter%batchSwap : map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 5;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF_NONE
                          {
                            PUSH int 161; # int : map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GET 3;      # nat : map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GET;        # option (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF_NONE
                          {
                            PUSH int 161; # int : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                      }
                      {
                        DUP 8;      # @parameter%batchSwap : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        CAR;        # map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 9;      # @parameter%batchSwap : map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 5;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF_NONE
                          {
                            PUSH int 160; # int : map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        CAR;        # pair (nat %amount) (nat %assetInIndex) : map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        CDR;        # nat : map nat (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GET;        # option (pair address (option nat)) : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF_NONE
                          {
                            PUSH int 160; # int : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                      }; # @some : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # previousTokenCalculated.value = compute_Swaps_188.value # @some : nat : nat : nat : nat : list operation : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUG 6;      # nat : nat : nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # compute_Swaps_147.value[params.swaps[i].assetInIndex] = compute_Swaps_147.value.get(params.swaps[i].assetInIndex, default_value = 0) + sp.to_int(match_pair_Swaps_207_fst) # nat : nat : nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 8;      # map nat int : nat : nat : nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SWAP;       # nat : map nat int : nat : nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    INT;        # int : map nat int : nat : nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DIG 8;      # map nat int : int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 10;     # @parameter%batchSwap : map nat int : int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat int : int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 6;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat int : int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat int : int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 192; # int : map nat int : int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat int : int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (nat %amount) (nat %assetInIndex) : map nat int : int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # nat : map nat int : int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option int : int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 0; # int : int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                      }
                      {}; # int : int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    ADD;        # int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SOME;       # option int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 9;      # @parameter%batchSwap : option int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : option int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 5;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : option int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : option int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 191; # int : option int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : option int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CAR;        # pair (nat %amount) (nat %assetInIndex) : option int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    CDR;        # nat : option int : map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    UPDATE;     # map nat int : nat : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUG 6;      # nat : nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # compute_Swaps_147.value[params.swaps[i].assetOutIndex] = compute_Swaps_147.value.get(params.swaps[i].assetOutIndex, default_value = 0) - sp.to_int(match_pair_Swaps_207_snd) # nat : nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 7;      # map nat int : nat : nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SWAP;       # nat : map nat int : nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    INT;        # int : map nat int : nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DIG 7;      # map nat int : int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 9;      # @parameter%batchSwap : map nat int : int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat int : int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 5;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat int : int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : map nat int : int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 194; # int : map nat int : int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat int : int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # nat : map nat int : int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option int : int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 0; # int : int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                      }
                      {}; # int : int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SUB;        # int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    SOME;       # option int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 8;      # @parameter%batchSwap : option int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 6;      # map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : option int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 4;      # nat : map nat (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : option int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option (pair (pair (nat %amount) (nat %assetInIndex)) (pair (nat %assetOutIndex) (pair %poolId address nat))) : option int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 193; # int : option int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : option int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 3;      # nat : option int : map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    UPDATE;     # map nat int : nat : nat : list operation : @some : @some : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUG 5;      # nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # loop step # nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PUSH nat 1; # nat : nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    ADD;        # nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP;        # nat : nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 3;      # nat : nat : nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    COMPARE;    # int : nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GT;         # bool : nat : nat : list operation : @some : @some : map nat int : @parameter%batchSwap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                  }; # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DROP 2;     # list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                # for i in sp.range(0, sp.len(params.assets)): ... (sp.TNat) # list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DUP 5;      # @parameter%batchSwap : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                CAR;        # map nat (pair address (option nat)) : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                SIZE;       # nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                PUSH nat 0; # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DUP;        # nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DUP 3;      # nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                COMPARE;    # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                GT;         # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                LOOP
                  {
                    # sp.verify(compute_Swaps_147.value[i] <= params.limits[i], 507) # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 7;      # @parameter%batchSwap : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET 5;      # map nat int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 2;      # nat : map nat int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 132; # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 7;      # map nat int : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 3;      # nat : map nat int : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option int : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 131; # int : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    COMPARE;    # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    LE;         # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF
                      {}
                      {
                        PUSH int 507; # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }; # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # if compute_Swaps_147.value[i] > 0: # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PUSH int 0; # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 7;      # map nat int : int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 3;      # nat : map nat int : int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option int : int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 131; # int : int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    COMPARE;    # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GT;         # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF
                      {
                        # sp.verify(sp.as_nat(compute_Swaps_147.value[i]) > 0, 'Zero_Transfer') # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        PUSH nat 0; # nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 7;      # map nat int : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 3;      # nat : map nat int : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GET;        # option int : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF_NONE
                          {
                            PUSH int 131; # int : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        ISNAT;      # option nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF_NONE
                          {
                            PUSH int 135; # int : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        COMPARE;    # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GT;         # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF
                          {}
                          {
                            PUSH string "Zero_Transfer"; # string : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            FAILWITH;   # FAILED
                          }; # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        # if sp.snd(params.assets[i]) != sp.none: # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        NONE nat;   # option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 8;      # @parameter%batchSwap : option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        CAR;        # map nat (pair address (option nat)) : option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 3;      # nat : map nat (pair address (option nat)) : option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GET;        # option (pair address (option nat)) : option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF_NONE
                          {
                            PUSH int 130; # int : option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        CDR;        # option nat : option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        COMPARE;    # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        NEQ;        # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF
                          {
                            # sp.transfer(sp.list([sp.record(from_ = params.funds.sender, txs = sp.list([sp.record(amount = sp.as_nat(compute_Swaps_147.value[i]), to_ = sp.self_address, token_id = sp.snd(params.assets[i]).open_some())]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), sp.fst(params.assets[i]), entrypoint='transfer').open_some()) # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DIG 2;      # list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 7;      # @parameter%batchSwap : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # map nat (pair address (option nat)) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 3;      # nat : map nat (pair address (option nat)) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET;        # option (pair address (option nat)) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 130; # int : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # address : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 32; # int : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            PUSH mutez 0; # mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 10;     # map nat int : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 7;      # nat : map nat int : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET;        # option int : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 131; # int : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            ISNAT;      # option nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 135; # int : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 12;     # @parameter%batchSwap : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # map nat (pair address (option nat)) : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 8;      # nat : map nat (pair address (option nat)) : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET;        # option (pair address (option nat)) : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 130; # int : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CDR;        # option nat : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 82; # int : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            SELF_ADDRESS; # @self : @some : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            PAIR 3;     # pair @self (pair @some @some) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 11;     # @parameter%batchSwap : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET 6;      # address : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            PAIR;       # pair address (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            TRANSFER_TOKENS; # operation : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CONS;       # list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUG 2;      # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                          }
                          {
                            # sp.transfer(sp.record(from_ = params.funds.sender, to_ = sp.self_address, value = sp.as_nat(compute_Swaps_147.value[i])), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), sp.fst(params.assets[i]), entrypoint='transfer').open_some()) # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DIG 2;      # list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 7;      # @parameter%batchSwap : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # map nat (pair address (option nat)) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 3;      # nat : map nat (pair address (option nat)) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET;        # option (pair address (option nat)) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 130; # int : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # address : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 56; # int : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            PUSH mutez 0; # mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 8;      # map nat int : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 5;      # nat : map nat int : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET;        # option int : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 131; # int : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            ISNAT;      # option nat : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 135; # int : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            SELF_ADDRESS; # @self : @some : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 11;     # @parameter%batchSwap : @self : @some : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : @self : @some : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET 6;      # address : @self : @some : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            PAIR 3;     # pair address (pair @self @some) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            TRANSFER_TOKENS; # operation : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CONS;       # list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUG 2;      # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                          }; # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                      }
                      {}; # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # if compute_Swaps_147.value[i] < 0: # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PUSH int 0; # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 7;      # map nat int : int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 3;      # nat : map nat int : int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GET;        # option int : int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF_NONE
                      {
                        PUSH int 131; # int : int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    COMPARE;    # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    LT;         # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    IF
                      {
                        # sp.verify((abs(compute_Swaps_147.value[i])) > 0, 'Zero_Transfer') # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        PUSH nat 0; # nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 7;      # map nat int : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 3;      # nat : map nat int : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GET;        # option int : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF_NONE
                          {
                            PUSH int 131; # int : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        ABS;        # nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        COMPARE;    # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GT;         # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF
                          {}
                          {
                            PUSH string "Zero_Transfer"; # string : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            FAILWITH;   # FAILED
                          }; # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        # if sp.snd(params.assets[i]) != sp.none: # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        NONE nat;   # option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 8;      # @parameter%batchSwap : option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        CAR;        # map nat (pair address (option nat)) : option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        DUP 3;      # nat : map nat (pair address (option nat)) : option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        GET;        # option (pair address (option nat)) : option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF_NONE
                          {
                            PUSH int 130; # int : option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        CDR;        # option nat : option nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        COMPARE;    # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        NEQ;        # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                        IF
                          {
                            # sp.transfer(sp.list([sp.record(from_ = sp.self_address, txs = sp.list([sp.record(amount = abs(compute_Swaps_147.value[i]), to_ = params.funds.recipient, token_id = sp.snd(params.assets[i]).open_some())]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), sp.fst(params.assets[i]), entrypoint='transfer').open_some()) # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DIG 2;      # list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 7;      # @parameter%batchSwap : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # map nat (pair address (option nat)) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 3;      # nat : map nat (pair address (option nat)) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET;        # option (pair address (option nat)) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 130; # int : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # address : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 32; # int : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            PUSH mutez 0; # mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 10;     # map nat int : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 7;      # nat : map nat int : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET;        # option int : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 131; # int : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            ABS;        # nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 12;     # @parameter%batchSwap : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # map nat (pair address (option nat)) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 8;      # nat : map nat (pair address (option nat)) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET;        # option (pair address (option nat)) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 130; # int : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CDR;        # option nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 82; # int : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 13;     # @parameter%batchSwap : @some : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : @some : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET 5;      # address : @some : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            PAIR 3;     # pair address (pair @some nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            SELF_ADDRESS; # @self : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            PAIR;       # pair @self (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            TRANSFER_TOKENS; # operation : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CONS;       # list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUG 2;      # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                          }
                          {
                            # sp.transfer(sp.record(from_ = sp.self_address, to_ = params.funds.recipient, value = abs(compute_Swaps_147.value[i])), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), sp.fst(params.assets[i]), entrypoint='transfer').open_some()) # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DIG 2;      # list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 7;      # @parameter%batchSwap : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # map nat (pair address (option nat)) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 3;      # nat : map nat (pair address (option nat)) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET;        # option (pair address (option nat)) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 130; # int : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # address : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 56; # int : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            PUSH mutez 0; # mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 8;      # map nat int : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 5;      # nat : map nat int : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET;        # option int : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            IF_NONE
                              {
                                PUSH int 131; # int : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            ABS;        # nat : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUP 10;     # @parameter%batchSwap : nat : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CAR;        # pair (map %assets nat (pair address (option nat))) (pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender))) : nat : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            GET 5;      # address : nat : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            SELF_ADDRESS; # @self : address : nat : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            PAIR 3;     # pair @self (pair address nat) : mutez : @some : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            TRANSFER_TOKENS; # operation : list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            CONS;       # list operation : nat : nat : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                            DUG 2;      # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                          }; # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                      }
                      {}; # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    # loop step # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    PUSH nat 1; # nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    ADD;        # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP;        # nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    DUP 3;      # nat : nat : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    COMPARE;    # int : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                    GT;         # bool : nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                  }; # nat : nat : list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DROP 2;     # list operation : nat : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                SWAP;       # nat : list operation : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DROP;       # list operation : pair address (option nat) : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                SWAP;       # pair address (option nat) : list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DROP;       # list operation : map nat int : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                SWAP;       # map nat int : list operation : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DROP;       # list operation : @parameter%batchSwap : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                SWAP;       # @parameter%batchSwap : list operation : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DROP;       # list operation : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DIG 2;      # lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : list operation : @storage
                DROP;       # list operation : @storage
              }; # list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
          }
          {
            IF_LEFT
              {
                # == exitPool ==
                # compute_PoolBalances_120 = sp.local("compute_PoolBalances_120", self._validateTokensAndGetBalances(sp.record(expectedTokens = params.request.assets, limits = params.request.limits, poolId = params.poolId))) # @parameter%exitPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%exitPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 2;      # @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%exitPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair (pair %poolId address nat) (address %recipient) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%exitPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair address nat : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%exitPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # @parameter%exitPool : pair address nat : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%exitPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat))))) : pair address nat : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%exitPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 3;      # map nat nat : pair address nat : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%exitPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 4;      # @parameter%exitPool : map nat nat : pair address nat : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%exitPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat))))) : map nat nat : pair address nat : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%exitPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # map nat (pair address (option nat)) : map nat nat : pair address nat : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%exitPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR 3;     # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%exitPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                SWAP;       # lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : @parameter%exitPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 3;      # @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 2;      # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                EXEC;       # pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                UNPAIR;     # map nat (pair nat nat) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 4;      # lambda (pair (map nat nat) bool) (map nat int) : map nat (pair nat nat) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DIG 4;      # lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int) : map nat (pair nat nat) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : @parameter%exitPool
                DIG 3;      # pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int) : map nat (pair nat nat) : @parameter%exitPool
                DIG 4;      # @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int) : map nat (pair nat nat)
                DIG 4;      # map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # compute_BalanceAllocation_5 = sp.local("compute_BalanceAllocation_5", {}, sp.TMap(sp.TNat, sp.TNat)) # map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                EMPTY_MAP nat nat; # map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # for i in sp.range(0, sp.len(compute_PoolBalances_120.value)): ... (sp.TNat) # map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 2;      # map nat (pair nat nat) : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                SIZE;       # nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PUSH nat 0; # nat : nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP;        # nat : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # nat : nat : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                COMPARE;    # int : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GT;         # bool : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                LOOP
                  {
                    # compute_BalanceAllocation_5.value[i] = sp.fst(compute_PoolBalances_120.value[i]) + sp.snd(compute_PoolBalances_120.value[i]) # nat : nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DIG 2;      # map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 4;      # map nat (pair nat nat) : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : map nat (pair nat nat) : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option (pair nat nat) : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 8; # int : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CDR;        # nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 5;      # map nat (pair nat nat) : nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 4;      # nat : map nat (pair nat nat) : nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option (pair nat nat) : nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 8; # int : nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CAR;        # nat : nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    ADD;        # nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    SOME;       # option nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : option nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    UPDATE;     # map nat nat : nat : nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUG 2;      # nat : nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    # loop step # nat : nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    PUSH nat 1; # nat : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    ADD;        # nat : nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP;        # nat : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : nat : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    COMPARE;    # int : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GT;         # bool : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                  }; # nat : nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DROP 2;     # map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # compute_PoolBalances_132 = sp.local("compute_PoolBalances_132", sp.view("beforeExitPool", sp.record(balances = compute_BalanceAllocation_5.value, userData = params.request.userData), sp.fst(params.poolId), sp.TTuple(sp.TNat, sp.TMap(sp.TNat, sp.TNat), sp.TNat)).open_some(message = 'Invalid view')) # map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # @parameter%exitPool : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair (pair %poolId address nat) (address %recipient) : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair address nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # address : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 4;      # @parameter%exitPool : address : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat))))) : address : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 4;      # pair (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat))) : address : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # map nat nat : pair (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat))) : address : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair (map nat nat) (pair (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat)))) : address : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                VIEW "beforeExitPool" (pair nat (pair (map nat nat) nat)); # option (pair nat (pair (map nat nat) nat)) : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                IF_NONE
                  {
                    PUSH string "Invalid view"; # string : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # sptAmountIn, amountsOut, invariant = sp.match_tuple(compute_PoolBalances_132.value, "sptAmountIn", "amountsOut", "invariant") # @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP;        # @some : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                UNPAIR 3;   # nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # sp.transfer(sp.record(amountsOut = amountsOut, balances = compute_BalanceAllocation_5.value, invariant = invariant, poolId = params.poolId, recoveryModeExit = params.request.userData.recoveryModeExit, sender = params.sender, sptAmountIn = sptAmountIn), sp.tez(0), sp.contract(sp.TRecord(amountsOut = sp.TMap(sp.TNat, sp.TNat), balances = sp.TMap(sp.TNat, sp.TNat), invariant = sp.TNat, poolId = sp.TPair(sp.TAddress, sp.TNat), recoveryModeExit = sp.TBool, sender = sp.TAddress, sptAmountIn = sp.TNat).layout((("amountsOut", ("balances", "invariant")), (("poolId", "recoveryModeExit"), ("sender", "sptAmountIn")))), sp.fst(params.poolId), entrypoint='afterExitPool').open_some(message = 'INTERFACE_MISMATCH')) # nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                NIL operation; # list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 8;      # @parameter%exitPool : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair (pair %poolId address nat) (address %recipient) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair address nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # address : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CONTRACT %afterExitPool (pair (pair (map %amountsOut nat nat) (pair (map %balances nat nat) (nat %invariant))) (pair (pair (pair %poolId address nat) (bool %recoveryModeExit)) (pair (address %sender) (nat %sptAmountIn)))); # option (contract (pair (pair (map %amountsOut nat nat) (pair (map %balances nat nat) (nat %invariant))) (pair (pair (pair %poolId address nat) (bool %recoveryModeExit)) (pair (address %sender) (nat %sptAmountIn))))) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                IF_NONE
                  {
                    PUSH string "INTERFACE_MISMATCH"; # string : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PUSH mutez 0; # mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 4;      # nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 11;     # @parameter%exitPool : nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 4;      # address : nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair address nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 11;     # @parameter%exitPool : pair address nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat))))) : pair address nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 7;      # bool : pair address nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 12;     # @parameter%exitPool : bool : pair address nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair (pair %poolId address nat) (address %recipient) : bool : pair address nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair address nat : bool : pair address nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair (pair address nat) bool : pair address nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair (pair (pair address nat) bool) (pair address nat) : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 7;      # nat : pair (pair (pair address nat) bool) (pair address nat) : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 10;     # map nat nat : nat : pair (pair (pair address nat) bool) (pair address nat) : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair (map nat nat) nat : pair (pair (pair address nat) bool) (pair address nat) : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 7;      # map nat nat : pair (map nat nat) nat : pair (pair (pair address nat) bool) (pair address nat) : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair (map nat nat) (pair (map nat nat) nat) : pair (pair (pair address nat) bool) (pair address nat) : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair (pair (map nat nat) (pair (map nat nat) nat)) (pair (pair (pair address nat) bool) (pair address nat)) : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                TRANSFER_TOKENS; # operation : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CONS;       # list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # sp.verify(sp.len(compute_PoolBalances_120.value) == sp.len(amountsOut)) # list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # map nat nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                SIZE;       # nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 8;      # map nat (pair nat nat) : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                SIZE;       # nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                COMPARE;    # int : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                EQ;         # bool : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                IF
                  {}
                  {
                    PUSH string "WrongCondition: sp.len(compute_PoolBalances_120.value) == sp.len(amountsOut)"; # string : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    FAILWITH;   # FAILED
                  }; # list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # compute_PoolBalances_210 = sp.local("compute_PoolBalances_210", {}, sp.TMap(sp.TNat, sp.TPair(sp.TNat, sp.TNat))) # list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                EMPTY_MAP nat (pair nat nat); # map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # for x in sp.range(0, sp.len(params.request.assets)): ... (sp.TNat) # map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 9;      # @parameter%exitPool : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat))))) : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # map nat (pair address (option nat)) : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                SIZE;       # nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PUSH nat 0; # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP;        # nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # nat : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                COMPARE;    # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GT;         # bool : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                LOOP
                  {
                    # sp.verify(amountsOut[x] <= params.request.limits[x], 505) # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 11;     # @parameter%exitPool : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat))))) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET 3;      # map nat nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 2;      # nat : map nat nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 214; # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 7;      # map nat nat : @some : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : map nat nat : @some : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option nat : @some : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 213; # int : @some : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    COMPARE;    # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    LE;         # bool : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF
                      {}
                      {
                        PUSH int 505; # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }; # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    # sp.verify(amountsOut[x] > 0, 'Zero_Transfer') # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    PUSH nat 0; # nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 7;      # map nat nat : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : map nat nat : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option nat : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 213; # int : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    COMPARE;    # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GT;         # bool : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF
                      {}
                      {
                        PUSH string "Zero_Transfer"; # string : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }; # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    # if sp.snd(params.request.assets[x]) != sp.none: # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    NONE nat;   # option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 12;     # @parameter%exitPool : option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat))))) : option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CAR;        # map nat (pair address (option nat)) : option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : map nat (pair address (option nat)) : option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option (pair address (option nat)) : option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 216; # int : option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CDR;        # option nat : option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    COMPARE;    # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    NEQ;        # bool : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF
                      {
                        # sp.transfer(sp.list([sp.record(from_ = sp.self_address, txs = sp.list([sp.record(amount = amountsOut[x], to_ = params.sender, token_id = sp.snd(params.request.assets[x]).open_some())]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), sp.fst(params.request.assets[x]), entrypoint='transfer').open_some()) # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DIG 3;      # list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 11;     # @parameter%exitPool : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat))))) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CAR;        # map nat (pair address (option nat)) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 3;      # nat : map nat (pair address (option nat)) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET;        # option (pair address (option nat)) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        IF_NONE
                          {
                            PUSH int 216; # int : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CAR;        # address : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        IF_NONE
                          {
                            PUSH int 32; # int : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        PUSH mutez 0; # mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 10;     # map nat nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 7;      # nat : map nat nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET;        # option nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        IF_NONE
                          {
                            PUSH int 213; # int : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 16;     # @parameter%exitPool : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat))))) : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CAR;        # map nat (pair address (option nat)) : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 8;      # nat : map nat (pair address (option nat)) : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET;        # option (pair address (option nat)) : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        IF_NONE
                          {
                            PUSH int 216; # int : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CDR;        # option nat : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        IF_NONE
                          {
                            PUSH int 82; # int : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 17;     # @parameter%exitPool : @some : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET 4;      # address : @some : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        PAIR 3;     # pair address (pair @some @some) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        SELF_ADDRESS; # @self : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        PAIR;       # pair @self (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        TRANSFER_TOKENS; # operation : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CONS;       # list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUG 3;      # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                      }
                      {
                        # sp.transfer(sp.record(from_ = sp.self_address, to_ = params.sender, value = amountsOut[x]), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), sp.fst(params.request.assets[x]), entrypoint='transfer').open_some()) # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DIG 3;      # list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 11;     # @parameter%exitPool : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat))))) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CAR;        # map nat (pair address (option nat)) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 3;      # nat : map nat (pair address (option nat)) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET;        # option (pair address (option nat)) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        IF_NONE
                          {
                            PUSH int 216; # int : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CAR;        # address : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        IF_NONE
                          {
                            PUSH int 56; # int : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        PUSH mutez 0; # mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 8;      # map nat nat : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 5;      # nat : map nat nat : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET;        # option nat : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        IF_NONE
                          {
                            PUSH int 213; # int : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 14;     # @parameter%exitPool : @some : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET 4;      # address : @some : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        SELF_ADDRESS; # @self : address : @some : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        PAIR 3;     # pair @self (pair address @some) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        TRANSFER_TOKENS; # operation : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CONS;       # list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUG 3;      # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                      }; # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    # compute_PoolBalances_210.value[x] = (sp.as_nat(sp.fst(compute_PoolBalances_120.value[x]) - amountsOut[x]), sp.snd(compute_PoolBalances_120.value[x])) # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DIG 2;      # map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 10;     # map nat (pair nat nat) : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : map nat (pair nat nat) : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option (pair nat nat) : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 220; # int : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CDR;        # nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 7;      # map nat nat : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 4;      # nat : map nat nat : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option nat : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 213; # int : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 12;     # map nat (pair nat nat) : @some : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 5;      # nat : map nat (pair nat nat) : @some : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option (pair nat nat) : @some : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 220; # int : @some : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CAR;        # nat : @some : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    SUB;        # int : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    ISNAT;      # option nat : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 220; # int : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    PAIR;       # pair @some nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    SOME;       # option (pair @some nat) : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : option (pair @some nat) : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    UPDATE;     # map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUG 2;      # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    # loop step # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    PUSH nat 1; # nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    ADD;        # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP;        # nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    COMPARE;    # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GT;         # bool : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                  }; # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DROP 2;     # map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # for i in sp.range(0, sp.len(params.request.assets)): ... (sp.TNat) # map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 9;      # @parameter%exitPool : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat))))) : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # map nat (pair address (option nat)) : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                SIZE;       # nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PUSH nat 0; # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP;        # nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # nat : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                COMPARE;    # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GT;         # bool : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                LOOP
                  {
                    # self.data.poolsBalances[params.poolId][params.request.assets[i]] = compute_PoolBalances_210.value[i] # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DIG 11;     # pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    UNPAIR;     # pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    SWAP;       # pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool) : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    UNPAIR;     # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    UNPAIR;     # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 16;     # @parameter%exitPool : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CAR;        # pair (pair %poolId address nat) (address %recipient) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CAR;        # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP;        # pair address nat : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUG 2;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 110; # int : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 9;      # map nat (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 8;      # nat : map nat (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 111; # int : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    SOME;       # option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 18;     # @parameter%exitPool : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat))))) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CAR;        # map nat (pair address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 9;      # nat : map nat (pair address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option (pair address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 110; # int : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    UPDATE;     # map (pair address (option nat)) (pair nat nat) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    SOME;       # option (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    SWAP;       # pair address nat : option (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    UPDATE;     # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    PAIR;       # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    PAIR;       # pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool) : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    SWAP;       # pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    PAIR;       # pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUG 11;     # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    # loop step # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    PUSH nat 1; # nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    ADD;        # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP;        # nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    COMPARE;    # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GT;         # bool : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                  }; # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DROP 3;     # list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                SWAP;       # nat : list operation : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DROP;       # list operation : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 2;      # nat : list operation : map nat nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DROP;       # list operation : map nat nat : @some : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 2;      # @some : list operation : map nat nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DROP;       # list operation : map nat nat : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 2;      # map nat nat : list operation : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DROP;       # list operation : map nat nat : map nat (pair nat nat) : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 2;      # map nat (pair nat nat) : list operation : map nat nat : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DROP;       # list operation : map nat nat : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 4;      # lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : list operation : map nat nat : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                DROP;       # list operation : map nat nat : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                # sp.emit(sp.record(amountsInOrOut = self._castToInt(sp.record(amounts = amountsOut, positive = False)), poolId = params.poolId, sender = params.sender, tokens = params.request.assets), tag = "PoolBalanceChanged") # list operation : map nat nat : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # @parameter%exitPool : list operation : map nat nat : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %amountsOut (map nat nat)) (pair (string %kind) (option %maxSPTAmountIn nat))) (pair (bool %recoveryModeExit) (pair (option %sptAmountIn nat) (option %tokenIndex nat))))) : list operation : map nat nat : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # map nat (pair address (option nat)) : list operation : map nat nat : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 4;      # @parameter%exitPool : map nat (pair address (option nat)) : list operation : map nat nat : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                GET 4;      # address : map nat (pair address (option nat)) : list operation : map nat nat : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair address (map nat (pair address (option nat))) : list operation : map nat nat : @parameter%exitPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 3;      # @parameter%exitPool : pair address (map nat (pair address (option nat))) : list operation : map nat nat : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair (pair %poolId address nat) (address %recipient) : pair address (map nat (pair address (option nat))) : list operation : map nat nat : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair address nat : pair address (map nat (pair address (option nat))) : list operation : map nat nat : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 5;      # lambda (pair (map nat nat) bool) (map nat int) : pair address nat : pair address (map nat (pair address (option nat))) : list operation : map nat nat : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                PUSH bool False; # bool : lambda (pair (map nat nat) bool) (map nat int) : pair address nat : pair address (map nat (pair address (option nat))) : list operation : map nat nat : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                DIG 5;      # map nat nat : bool : lambda (pair (map nat nat) bool) (map nat int) : pair address nat : pair address (map nat (pair address (option nat))) : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                PAIR;       # pair (map nat nat) bool : lambda (pair (map nat nat) bool) (map nat int) : pair address nat : pair address (map nat (pair address (option nat))) : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                EXEC;       # map nat int : pair address nat : pair address (map nat (pair address (option nat))) : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                PAIR;       # pair (map nat int) (pair address nat) : pair address (map nat (pair address (option nat))) : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                PAIR;       # pair (pair (map nat int) (pair address nat)) (pair address (map nat (pair address (option nat)))) : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                EMIT %PoolBalanceChanged (pair (pair (map %amountsInOrOut nat int) (pair %poolId address nat)) (pair (address %sender) (map %tokens nat (pair address (option nat))))); # operation : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                CONS;       # list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
              }
              {
                # == joinPool ==
                # compute_PoolBalances_61 = sp.local("compute_PoolBalances_61", self._validateTokensAndGetBalances(sp.record(expectedTokens = params.request.assets, limits = params.request.limits, poolId = params.poolId))) # @parameter%joinPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%joinPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 2;      # @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%joinPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair (pair %poolId address nat) (address %recipient) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%joinPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair address nat : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%joinPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # @parameter%joinPool : pair address nat : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%joinPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %allT nat) (pair (option %amountsIn (map nat nat)) (string %kind))) (pair (option %minSPTAmountOut nat) (pair (option %sptAmountOut nat) (option %tokenIndex nat))))) : pair address nat : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%joinPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 3;      # map nat nat : pair address nat : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%joinPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 4;      # @parameter%joinPool : map nat nat : pair address nat : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%joinPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %allT nat) (pair (option %amountsIn (map nat nat)) (string %kind))) (pair (option %minSPTAmountOut nat) (pair (option %sptAmountOut nat) (option %tokenIndex nat))))) : map nat nat : pair address nat : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%joinPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # map nat (pair address (option nat)) : map nat nat : pair address nat : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%joinPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR 3;     # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%joinPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                SWAP;       # lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : @parameter%joinPool : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 3;      # @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 2;      # pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat)) : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                EXEC;       # pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                UNPAIR;     # map nat (pair nat nat) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 4;      # lambda (pair (map nat nat) bool) (map nat int) : map nat (pair nat nat) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                DIG 4;      # lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int) : map nat (pair nat nat) : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : @parameter%joinPool
                DIG 3;      # pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int) : map nat (pair nat nat) : @parameter%joinPool
                DIG 4;      # @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int) : map nat (pair nat nat)
                DIG 4;      # map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # compute_BalanceAllocation_5 = sp.local("compute_BalanceAllocation_5", {}, sp.TMap(sp.TNat, sp.TNat)) # map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                EMPTY_MAP nat nat; # map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # for i in sp.range(0, sp.len(compute_PoolBalances_61.value)): ... (sp.TNat) # map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 2;      # map nat (pair nat nat) : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                SIZE;       # nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PUSH nat 0; # nat : nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP;        # nat : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # nat : nat : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                COMPARE;    # int : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GT;         # bool : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                LOOP
                  {
                    # compute_BalanceAllocation_5.value[i] = sp.fst(compute_PoolBalances_61.value[i]) + sp.snd(compute_PoolBalances_61.value[i]) # nat : nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DIG 2;      # map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 4;      # map nat (pair nat nat) : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : map nat (pair nat nat) : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option (pair nat nat) : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 8; # int : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CDR;        # nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 5;      # map nat (pair nat nat) : nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 4;      # nat : map nat (pair nat nat) : nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option (pair nat nat) : nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 8; # int : nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CAR;        # nat : nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    ADD;        # nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    SOME;       # option nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : option nat : map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    UPDATE;     # map nat nat : nat : nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUG 2;      # nat : nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    # loop step # nat : nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    PUSH nat 1; # nat : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    ADD;        # nat : nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP;        # nat : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : nat : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    COMPARE;    # int : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GT;         # bool : nat : nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                  }; # nat : nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DROP 2;     # map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # compute_PoolBalances_72 = sp.local("compute_PoolBalances_72", sp.view("beforeJoinPool", sp.record(balances = compute_BalanceAllocation_5.value, userData = params.request.userData), sp.fst(params.poolId), sp.TTuple(sp.TNat, sp.TMap(sp.TNat, sp.TNat), sp.TNat)).open_some(message = 'Invalid view')) # map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # @parameter%joinPool : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair (pair %poolId address nat) (address %recipient) : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair address nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # address : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 4;      # @parameter%joinPool : address : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %allT nat) (pair (option %amountsIn (map nat nat)) (string %kind))) (pair (option %minSPTAmountOut nat) (pair (option %sptAmountOut nat) (option %tokenIndex nat))))) : address : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 4;      # pair (pair (option %allT nat) (pair (option %amountsIn (map nat nat)) (string %kind))) (pair (option %minSPTAmountOut nat) (pair (option %sptAmountOut nat) (option %tokenIndex nat))) : address : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # map nat nat : pair (pair (option %allT nat) (pair (option %amountsIn (map nat nat)) (string %kind))) (pair (option %minSPTAmountOut nat) (pair (option %sptAmountOut nat) (option %tokenIndex nat))) : address : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair (map nat nat) (pair (pair (option %allT nat) (pair (option %amountsIn (map nat nat)) (string %kind))) (pair (option %minSPTAmountOut nat) (pair (option %sptAmountOut nat) (option %tokenIndex nat)))) : address : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                VIEW "beforeJoinPool" (pair nat (pair (map nat nat) nat)); # option (pair nat (pair (map nat nat) nat)) : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                IF_NONE
                  {
                    PUSH string "Invalid view"; # string : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # sptAmountOut, amountsIn, invariant = sp.match_tuple(compute_PoolBalances_72.value, "sptAmountOut", "amountsIn", "invariant") # @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP;        # @some : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                UNPAIR 3;   # nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # sp.transfer(sp.record(amountsIn = amountsIn, balances = compute_BalanceAllocation_5.value, invariant = invariant, poolId = params.poolId, recipient = params.recipient, sptAmountOut = sptAmountOut), sp.tez(0), sp.contract(sp.TRecord(amountsIn = sp.TMap(sp.TNat, sp.TNat), balances = sp.TMap(sp.TNat, sp.TNat), invariant = sp.TNat, poolId = sp.TPair(sp.TAddress, sp.TNat), recipient = sp.TAddress, sptAmountOut = sp.TNat).layout((("amountsIn", ("balances", "invariant")), ("poolId", ("recipient", "sptAmountOut")))), sp.fst(params.poolId), entrypoint='afterJoinPool').open_some(message = 'INTERFACE_MISMATCH')) # nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                NIL operation; # list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 8;      # @parameter%joinPool : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair (pair %poolId address nat) (address %recipient) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair address nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # address : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CONTRACT %afterJoinPool (pair (pair (map %amountsIn nat nat) (pair (map %balances nat nat) (nat %invariant))) (pair (pair %poolId address nat) (pair (address %recipient) (nat %sptAmountOut)))); # option (contract (pair (pair (map %amountsIn nat nat) (pair (map %balances nat nat) (nat %invariant))) (pair (pair %poolId address nat) (pair (address %recipient) (nat %sptAmountOut))))) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                IF_NONE
                  {
                    PUSH string "INTERFACE_MISMATCH"; # string : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PUSH mutez 0; # mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 4;      # nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 11;     # @parameter%joinPool : nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair (pair %poolId address nat) (address %recipient) : nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CDR;        # address : nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair address nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 11;     # @parameter%joinPool : pair address nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair (pair %poolId address nat) (address %recipient) : pair address nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair address nat : pair address nat : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair (pair address nat) (pair address nat) : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 7;      # nat : pair (pair address nat) (pair address nat) : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 10;     # map nat nat : nat : pair (pair address nat) (pair address nat) : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair (map nat nat) nat : pair (pair address nat) (pair address nat) : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 7;      # map nat nat : pair (map nat nat) nat : pair (pair address nat) (pair address nat) : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair (map nat nat) (pair (map nat nat) nat) : pair (pair address nat) (pair address nat) : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair (pair (map nat nat) (pair (map nat nat) nat)) (pair (pair address nat) (pair address nat)) : mutez : @some : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                TRANSFER_TOKENS; # operation : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CONS;       # list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # sp.verify(sp.len(compute_PoolBalances_61.value) == sp.len(amountsIn)) # list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # map nat nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                SIZE;       # nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 8;      # map nat (pair nat nat) : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                SIZE;       # nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                COMPARE;    # int : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                EQ;         # bool : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                IF
                  {}
                  {
                    PUSH string "WrongCondition: sp.len(compute_PoolBalances_61.value) == sp.len(amountsIn)"; # string : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    FAILWITH;   # FAILED
                  }; # list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # compute_PoolBalances_182 = sp.local("compute_PoolBalances_182", {}, sp.TMap(sp.TNat, sp.TPair(sp.TNat, sp.TNat))) # list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                EMPTY_MAP nat (pair nat nat); # map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # for x in sp.range(0, sp.len(params.request.assets)): ... (sp.TNat) # map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 9;      # @parameter%joinPool : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %allT nat) (pair (option %amountsIn (map nat nat)) (string %kind))) (pair (option %minSPTAmountOut nat) (pair (option %sptAmountOut nat) (option %tokenIndex nat))))) : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # map nat (pair address (option nat)) : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                SIZE;       # nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PUSH nat 0; # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP;        # nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # nat : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                COMPARE;    # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GT;         # bool : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                LOOP
                  {
                    # sp.verify(amountsIn[x] <= params.request.limits[x], 506) # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 11;     # @parameter%joinPool : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %allT nat) (pair (option %amountsIn (map nat nat)) (string %kind))) (pair (option %minSPTAmountOut nat) (pair (option %sptAmountOut nat) (option %tokenIndex nat))))) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET 3;      # map nat nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 2;      # nat : map nat nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 186; # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 7;      # map nat nat : @some : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : map nat nat : @some : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option nat : @some : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 185; # int : @some : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    COMPARE;    # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    LE;         # bool : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF
                      {}
                      {
                        PUSH int 506; # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }; # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    # sp.verify(amountsIn[x] > 0, 'Zero_Transfer') # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    PUSH nat 0; # nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 7;      # map nat nat : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : map nat nat : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option nat : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 185; # int : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    COMPARE;    # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GT;         # bool : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF
                      {}
                      {
                        PUSH string "Zero_Transfer"; # string : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }; # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    # if sp.snd(params.request.assets[x]) != sp.none: # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    NONE nat;   # option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 12;     # @parameter%joinPool : option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %allT nat) (pair (option %amountsIn (map nat nat)) (string %kind))) (pair (option %minSPTAmountOut nat) (pair (option %sptAmountOut nat) (option %tokenIndex nat))))) : option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CAR;        # map nat (pair address (option nat)) : option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : map nat (pair address (option nat)) : option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option (pair address (option nat)) : option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 189; # int : option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CDR;        # option nat : option nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    COMPARE;    # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    NEQ;        # bool : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF
                      {
                        # sp.transfer(sp.list([sp.record(from_ = params.sender, txs = sp.list([sp.record(amount = amountsIn[x], to_ = sp.self_address, token_id = sp.snd(params.request.assets[x]).open_some())]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), sp.fst(params.request.assets[x]), entrypoint='transfer').open_some()) # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DIG 3;      # list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 11;     # @parameter%joinPool : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %allT nat) (pair (option %amountsIn (map nat nat)) (string %kind))) (pair (option %minSPTAmountOut nat) (pair (option %sptAmountOut nat) (option %tokenIndex nat))))) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CAR;        # map nat (pair address (option nat)) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 3;      # nat : map nat (pair address (option nat)) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET;        # option (pair address (option nat)) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        IF_NONE
                          {
                            PUSH int 189; # int : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CAR;        # address : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        IF_NONE
                          {
                            PUSH int 32; # int : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        PUSH mutez 0; # mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 10;     # map nat nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 7;      # nat : map nat nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET;        # option nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        IF_NONE
                          {
                            PUSH int 185; # int : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 16;     # @parameter%joinPool : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %allT nat) (pair (option %amountsIn (map nat nat)) (string %kind))) (pair (option %minSPTAmountOut nat) (pair (option %sptAmountOut nat) (option %tokenIndex nat))))) : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CAR;        # map nat (pair address (option nat)) : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 8;      # nat : map nat (pair address (option nat)) : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET;        # option (pair address (option nat)) : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        IF_NONE
                          {
                            PUSH int 189; # int : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CDR;        # option nat : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        IF_NONE
                          {
                            PUSH int 82; # int : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        SELF_ADDRESS; # @self : @some : @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        PAIR 3;     # pair @self (pair @some @some) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 15;     # @parameter%joinPool : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET 4;      # address : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        PAIR;       # pair address (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        TRANSFER_TOKENS; # operation : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CONS;       # list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUG 3;      # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                      }
                      {
                        # sp.transfer(sp.record(from_ = params.sender, to_ = sp.self_address, value = amountsIn[x]), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), sp.fst(params.request.assets[x]), entrypoint='transfer').open_some()) # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DIG 3;      # list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 11;     # @parameter%joinPool : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %allT nat) (pair (option %amountsIn (map nat nat)) (string %kind))) (pair (option %minSPTAmountOut nat) (pair (option %sptAmountOut nat) (option %tokenIndex nat))))) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CAR;        # map nat (pair address (option nat)) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 3;      # nat : map nat (pair address (option nat)) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET;        # option (pair address (option nat)) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        IF_NONE
                          {
                            PUSH int 189; # int : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CAR;        # address : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        IF_NONE
                          {
                            PUSH int 56; # int : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        PUSH mutez 0; # mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 8;      # map nat nat : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 5;      # nat : map nat nat : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET;        # option nat : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        IF_NONE
                          {
                            PUSH int 185; # int : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        SELF_ADDRESS; # @self : @some : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUP 15;     # @parameter%joinPool : @self : @some : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        GET 4;      # address : @self : @some : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        PAIR 3;     # pair address (pair @self @some) : mutez : @some : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        TRANSFER_TOKENS; # operation : list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        CONS;       # list operation : nat : nat : map nat (pair nat nat) : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        DUG 3;      # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                      }; # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    # compute_PoolBalances_182.value[x] = (sp.fst(compute_PoolBalances_61.value[x]) + amountsIn[x], sp.snd(compute_PoolBalances_61.value[x])) # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DIG 2;      # map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 10;     # map nat (pair nat nat) : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : map nat (pair nat nat) : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option (pair nat nat) : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 196; # int : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CDR;        # nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 7;      # map nat nat : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 4;      # nat : map nat nat : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option nat : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 185; # int : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 12;     # map nat (pair nat nat) : @some : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 5;      # nat : map nat (pair nat nat) : @some : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option (pair nat nat) : @some : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 196; # int : @some : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CAR;        # nat : @some : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    ADD;        # nat : nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    PAIR;       # pair nat nat : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    SOME;       # option (pair nat nat) : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : option (pair nat nat) : map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    UPDATE;     # map nat (pair nat nat) : nat : nat : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUG 2;      # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    # loop step # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    PUSH nat 1; # nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    ADD;        # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP;        # nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    COMPARE;    # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GT;         # bool : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                  }; # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DROP 2;     # map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                # for i in sp.range(0, sp.len(params.request.assets)): ... (sp.TNat) # map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 9;      # @parameter%joinPool : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %allT nat) (pair (option %amountsIn (map nat nat)) (string %kind))) (pair (option %minSPTAmountOut nat) (pair (option %sptAmountOut nat) (option %tokenIndex nat))))) : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # map nat (pair address (option nat)) : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                SIZE;       # nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                PUSH nat 0; # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP;        # nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # nat : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                COMPARE;    # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                GT;         # bool : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                LOOP
                  {
                    # self.data.poolsBalances[params.poolId][params.request.assets[i]] = compute_PoolBalances_182.value[i] # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DIG 11;     # pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    UNPAIR;     # pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    SWAP;       # pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool) : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    UNPAIR;     # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    UNPAIR;     # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 16;     # @parameter%joinPool : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CAR;        # pair (pair %poolId address nat) (address %recipient) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CAR;        # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP;        # pair address nat : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUG 2;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 110; # int : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 9;      # map nat (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 8;      # nat : map nat (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 111; # int : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    SOME;       # option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 18;     # @parameter%joinPool : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %allT nat) (pair (option %amountsIn (map nat nat)) (string %kind))) (pair (option %minSPTAmountOut nat) (pair (option %sptAmountOut nat) (option %tokenIndex nat))))) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    CAR;        # map nat (pair address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 9;      # nat : map nat (pair address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GET;        # option (pair address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    IF_NONE
                      {
                        PUSH int 110; # int : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    UPDATE;     # map (pair address (option nat)) (pair nat nat) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    SOME;       # option (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    SWAP;       # pair address nat : option (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    UPDATE;     # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    PAIR;       # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : pair (option address) bool : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    PAIR;       # pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool) : pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    SWAP;       # pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    PAIR;       # pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUG 11;     # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    # loop step # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    PUSH nat 1; # nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    ADD;        # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP;        # nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    DUP 3;      # nat : nat : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    COMPARE;    # int : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                    GT;         # bool : nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                  }; # nat : nat : map nat (pair nat nat) : list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DROP 3;     # list operation : nat : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                SWAP;       # nat : list operation : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DROP;       # list operation : map nat nat : nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 2;      # nat : list operation : map nat nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DROP;       # list operation : map nat nat : @some : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 2;      # @some : list operation : map nat nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DROP;       # list operation : map nat nat : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 2;      # map nat nat : list operation : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DROP;       # list operation : map nat nat : map nat (pair nat nat) : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 2;      # map nat (pair nat nat) : list operation : map nat nat : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DROP;       # list operation : map nat nat : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 4;      # lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : list operation : map nat nat : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                DROP;       # list operation : map nat nat : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                # sp.emit(sp.record(amountsInOrOut = self._castToInt(sp.record(amounts = amountsIn, positive = True)), poolId = params.poolId, sender = params.sender, tokens = params.request.assets), tag = "PoolBalanceChanged") # list operation : map nat nat : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 3;      # @parameter%joinPool : list operation : map nat nat : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                GET 3;      # pair (map %assets nat (pair address (option nat))) (pair (map %limits nat nat) (pair %userData (pair (option %allT nat) (pair (option %amountsIn (map nat nat)) (string %kind))) (pair (option %minSPTAmountOut nat) (pair (option %sptAmountOut nat) (option %tokenIndex nat))))) : list operation : map nat nat : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # map nat (pair address (option nat)) : list operation : map nat nat : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                DUP 4;      # @parameter%joinPool : map nat (pair address (option nat)) : list operation : map nat nat : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                GET 4;      # address : map nat (pair address (option nat)) : list operation : map nat nat : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                PAIR;       # pair address (map nat (pair address (option nat))) : list operation : map nat nat : @parameter%joinPool : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 3;      # @parameter%joinPool : pair address (map nat (pair address (option nat))) : list operation : map nat nat : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair (pair %poolId address nat) (address %recipient) : pair address (map nat (pair address (option nat))) : list operation : map nat nat : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                CAR;        # pair address nat : pair address (map nat (pair address (option nat))) : list operation : map nat nat : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)) : lambda (pair (map nat nat) bool) (map nat int)
                DIG 5;      # lambda (pair (map nat nat) bool) (map nat int) : pair address nat : pair address (map nat (pair address (option nat))) : list operation : map nat nat : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                PUSH bool True; # bool : lambda (pair (map nat nat) bool) (map nat int) : pair address nat : pair address (map nat (pair address (option nat))) : list operation : map nat nat : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                DIG 5;      # map nat nat : bool : lambda (pair (map nat nat) bool) (map nat int) : pair address nat : pair address (map nat (pair address (option nat))) : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                PAIR;       # pair (map nat nat) bool : lambda (pair (map nat nat) bool) (map nat int) : pair address nat : pair address (map nat (pair address (option nat))) : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                EXEC;       # map nat int : pair address nat : pair address (map nat (pair address (option nat))) : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                PAIR;       # pair (map nat int) (pair address nat) : pair address (map nat (pair address (option nat))) : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                PAIR;       # pair (pair (map nat int) (pair address nat)) (pair address (map nat (pair address (option nat)))) : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                EMIT %PoolBalanceChanged (pair (pair (map %amountsInOrOut nat int) (pair %poolId address nat)) (pair (address %sender) (map %tokens nat (pair address (option nat))))); # operation : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
                CONS;       # list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
              }; # list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
          }; # list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
      }
      {
        DIG 3;      # lambda (pair (map nat nat) bool) (map nat int) : @parameter.right : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
        DROP;       # @parameter.right : @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
        IF_LEFT
          {
            IF_LEFT
              {
                DROP;       # @storage : lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))))
                SWAP;       # lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @storage
                DROP;       # @storage
                # == registerPool ==
                # sp.verify(self.data.settings.paused == False, 'ONLY_UNPAUSED') # @storage
                PUSH bool False; # bool : @storage
                DUP 2;      # @storage : bool : @storage
                GET 6;      # bool : bool : @storage
                COMPARE;    # int : @storage
                EQ;         # bool : @storage
                IF
                  {}
                  {
                    PUSH string "ONLY_UNPAUSED"; # string : @storage
                    FAILWITH;   # FAILED
                  }; # @storage
                # compute_PoolRegistry_18 = sp.local("compute_PoolRegistry_18", self.data.nextPoolNonce) # @storage
                DUP;        # @storage : @storage
                CAR;        # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @storage
                GET 4;      # nat : @storage
                SWAP;       # @storage : nat
                # self.data.isPoolRegistered[(sp.sender, compute_PoolRegistry_18.value)] = sp.unit # @storage : nat
                UNPAIR;     # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                UNPAIR;     # pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit) : pair (big_map %metadata string bytes) (nat %nextPoolNonce) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                UNPAIR;     # address : big_map (pair address nat) unit : pair (big_map %metadata string bytes) (nat %nextPoolNonce) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                SWAP;       # big_map (pair address nat) unit : address : pair (big_map %metadata string bytes) (nat %nextPoolNonce) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                PUSH (option unit) (Some Unit); # option unit : big_map (pair address nat) unit : address : pair (big_map %metadata string bytes) (nat %nextPoolNonce) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                DUP 6;      # nat : option unit : big_map (pair address nat) unit : address : pair (big_map %metadata string bytes) (nat %nextPoolNonce) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                SENDER;     # @sender : nat : option unit : big_map (pair address nat) unit : address : pair (big_map %metadata string bytes) (nat %nextPoolNonce) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                PAIR;       # pair @sender nat : option unit : big_map (pair address nat) unit : address : pair (big_map %metadata string bytes) (nat %nextPoolNonce) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                UPDATE;     # big_map (pair address nat) unit : address : pair (big_map %metadata string bytes) (nat %nextPoolNonce) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                SWAP;       # address : big_map (pair address nat) unit : pair (big_map %metadata string bytes) (nat %nextPoolNonce) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                PAIR;       # pair address (big_map (pair address nat) unit) : pair (big_map %metadata string bytes) (nat %nextPoolNonce) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                SWAP;       # pair (big_map %metadata string bytes) (nat %nextPoolNonce) : pair address (big_map (pair address nat) unit) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                # self.data.nextPoolNonce += 1 # pair (big_map %metadata string bytes) (nat %nextPoolNonce) : pair address (big_map (pair address nat) unit) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                UNPAIR;     # big_map string bytes : nat : pair address (big_map (pair address nat) unit) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                SWAP;       # nat : big_map string bytes : pair address (big_map (pair address nat) unit) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                PUSH nat 1; # nat : nat : big_map string bytes : pair address (big_map (pair address nat) unit) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                ADD;        # nat : big_map string bytes : pair address (big_map (pair address nat) unit) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                SWAP;       # big_map string bytes : nat : pair address (big_map (pair address nat) unit) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                PAIR;       # pair (big_map string bytes) nat : pair address (big_map (pair address nat) unit) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                SWAP;       # pair address (big_map (pair address nat) unit) : pair (big_map string bytes) nat : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                PAIR;       # pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat
                PAIR;       # pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : nat
                SWAP;       # nat : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                # sp.emit(sp.record(pool = sp.sender, poolId = (sp.sender, compute_PoolRegistry_18.value)), tag = "PoolRegistered") # nat : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                NIL operation; # list operation : nat : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                SWAP;       # nat : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                SENDER;     # @sender : nat : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                PAIR;       # pair @sender nat : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                SENDER;     # @sender : pair @sender nat : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                PAIR;       # pair @sender (pair @sender nat) : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                EMIT %PoolRegistered (pair (address %pool) (pair %poolId address nat)); # operation : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                CONS;       # list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
              }
              {
                DIG 2;      # lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%registerTokens : @storage
                DROP;       # @parameter%registerTokens : @storage
                # == registerTokens ==
                # sp.verify(self.data.settings.paused == False, 'ONLY_UNPAUSED') # @parameter%registerTokens : @storage
                PUSH bool False; # bool : @parameter%registerTokens : @storage
                DUP 3;      # @storage : bool : @parameter%registerTokens : @storage
                GET 6;      # bool : bool : @parameter%registerTokens : @storage
                COMPARE;    # int : @parameter%registerTokens : @storage
                EQ;         # bool : @parameter%registerTokens : @storage
                IF
                  {}
                  {
                    PUSH string "ONLY_UNPAUSED"; # string : @parameter%registerTokens : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%registerTokens : @storage
                # sp.verify(self.data.isPoolRegistered.contains(params.poolId), 500) # @parameter%registerTokens : @storage
                DUP 2;      # @storage : @parameter%registerTokens : @storage
                CAR;        # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens : @storage
                CAR;        # pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit) : @parameter%registerTokens : @storage
                CDR;        # big_map (pair address nat) unit : @parameter%registerTokens : @storage
                DUP 2;      # @parameter%registerTokens : big_map (pair address nat) unit : @parameter%registerTokens : @storage
                GET 3;      # pair address nat : big_map (pair address nat) unit : @parameter%registerTokens : @storage
                MEM;        # bool : @parameter%registerTokens : @storage
                IF
                  {}
                  {
                    PUSH int 500; # int : @parameter%registerTokens : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%registerTokens : @storage
                # sp.verify(sp.sender == sp.fst(params.poolId), 501) # @parameter%registerTokens : @storage
                DUP;        # @parameter%registerTokens : @parameter%registerTokens : @storage
                GET 3;      # pair address nat : @parameter%registerTokens : @storage
                CAR;        # address : @parameter%registerTokens : @storage
                SENDER;     # @sender : address : @parameter%registerTokens : @storage
                COMPARE;    # int : @parameter%registerTokens : @storage
                EQ;         # bool : @parameter%registerTokens : @storage
                IF
                  {}
                  {
                    PUSH int 501; # int : @parameter%registerTokens : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%registerTokens : @storage
                # if self.data.poolsTokens.contains(params.poolId): # @parameter%registerTokens : @storage
                DUP 2;      # @storage : @parameter%registerTokens : @storage
                GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : @parameter%registerTokens : @storage
                CDR;        # big_map (pair address nat) (map nat (pair address (option nat))) : @parameter%registerTokens : @storage
                DUP 2;      # @parameter%registerTokens : big_map (pair address nat) (map nat (pair address (option nat))) : @parameter%registerTokens : @storage
                GET 3;      # pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : @parameter%registerTokens : @storage
                MEM;        # bool : @parameter%registerTokens : @storage
                IF
                  {
                    # for i in sp.range(0, sp.len(params.tokens)): ... (sp.TNat) # @parameter%registerTokens : @storage
                    DUP;        # @parameter%registerTokens : @parameter%registerTokens : @storage
                    GET 4;      # map nat (pair address (option nat)) : @parameter%registerTokens : @storage
                    SIZE;       # nat : @parameter%registerTokens : @storage
                    PUSH nat 0; # nat : nat : @parameter%registerTokens : @storage
                    DUP;        # nat : nat : nat : @parameter%registerTokens : @storage
                    DUP 3;      # nat : nat : nat : nat : @parameter%registerTokens : @storage
                    COMPARE;    # int : nat : nat : @parameter%registerTokens : @storage
                    GT;         # bool : nat : nat : @parameter%registerTokens : @storage
                    LOOP
                      {
                        # contains = sp.local("contains", False) # nat : nat : @parameter%registerTokens : @storage
                        PUSH bool False; # bool : nat : nat : @parameter%registerTokens : @storage
                        # for e in self.data.poolsTokens[params.poolId].values(): ... # bool : nat : nat : @parameter%registerTokens : @storage
                        DUP 5;      # @storage : bool : nat : nat : @parameter%registerTokens : @storage
                        GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : bool : nat : nat : @parameter%registerTokens : @storage
                        CDR;        # big_map (pair address nat) (map nat (pair address (option nat))) : bool : nat : nat : @parameter%registerTokens : @storage
                        DUP 5;      # @parameter%registerTokens : big_map (pair address nat) (map nat (pair address (option nat))) : bool : nat : nat : @parameter%registerTokens : @storage
                        GET 3;      # pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : bool : nat : nat : @parameter%registerTokens : @storage
                        GET;        # option (map nat (pair address (option nat))) : bool : nat : nat : @parameter%registerTokens : @storage
                        IF_NONE
                          {
                            PUSH int 59; # int : bool : nat : nat : @parameter%registerTokens : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : bool : nat : nat : @parameter%registerTokens : @storage
                        ITER
                          {
                            CDR;        # pair address (option nat) : bool : nat : nat : @parameter%registerTokens : @storage
                            # if e == params.tokens[i]: # pair address (option nat) : bool : nat : nat : @parameter%registerTokens : @storage
                            DUP 5;      # @parameter%registerTokens : pair address (option nat) : bool : nat : nat : @parameter%registerTokens : @storage
                            GET 4;      # map nat (pair address (option nat)) : pair address (option nat) : bool : nat : nat : @parameter%registerTokens : @storage
                            DUP 4;      # nat : map nat (pair address (option nat)) : pair address (option nat) : bool : nat : nat : @parameter%registerTokens : @storage
                            GET;        # option (pair address (option nat)) : pair address (option nat) : bool : nat : nat : @parameter%registerTokens : @storage
                            IF_NONE
                              {
                                PUSH int 65; # int : pair address (option nat) : bool : nat : nat : @parameter%registerTokens : @storage
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair address (option nat) : bool : nat : nat : @parameter%registerTokens : @storage
                            COMPARE;    # int : bool : nat : nat : @parameter%registerTokens : @storage
                            EQ;         # bool : bool : nat : nat : @parameter%registerTokens : @storage
                            IF
                              {
                                DROP;       # nat : nat : @parameter%registerTokens : @storage
                                # contains.value = True # nat : nat : @parameter%registerTokens : @storage
                                PUSH bool True; # bool : nat : nat : @parameter%registerTokens : @storage
                              }
                              {}; # bool : nat : nat : @parameter%registerTokens : @storage
                          }; # bool : nat : nat : @parameter%registerTokens : @storage
                        # sp.verify(contains.value == False) # bool : nat : nat : @parameter%registerTokens : @storage
                        PUSH bool False; # bool : bool : nat : nat : @parameter%registerTokens : @storage
                        COMPARE;    # int : nat : nat : @parameter%registerTokens : @storage
                        EQ;         # bool : nat : nat : @parameter%registerTokens : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: contains.value == False"; # string : nat : nat : @parameter%registerTokens : @storage
                            FAILWITH;   # FAILED
                          }; # nat : nat : @parameter%registerTokens : @storage
                        # self.data.poolsTokens[params.poolId][sp.len(self.data.poolsTokens[params.poolId])] = params.tokens[i] # nat : nat : @parameter%registerTokens : @storage
                        DUP 4;      # @storage : nat : nat : @parameter%registerTokens : @storage
                        UNPAIR;     # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat : nat : @parameter%registerTokens : @storage
                        SWAP;       # pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        UNPAIR;     # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        UNPAIR;     # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        SWAP;       # big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        DUP;        # big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        DUP 8;      # @parameter%registerTokens : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        GET 3;      # pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        DUP;        # pair address nat : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        DUG 2;      # pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        GET;        # option (map nat (pair address (option nat))) : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        IF_NONE
                          {
                            PUSH int 67; # int : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        DUP 9;      # @parameter%registerTokens : @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        GET 4;      # map nat (pair address (option nat)) : @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        DUP 8;      # nat : map nat (pair address (option nat)) : @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        GET;        # option (pair address (option nat)) : @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        IF_NONE
                          {
                            PUSH int 65; # int : @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        SOME;       # option (pair address (option nat)) : @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens : @storage
                        DIG 10;     # @storage : option (pair address (option nat)) : @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens
                        GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : option (pair address (option nat)) : @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens
                        CDR;        # big_map (pair address nat) (map nat (pair address (option nat))) : option (pair address (option nat)) : @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens
                        DUP 11;     # @parameter%registerTokens : big_map (pair address nat) (map nat (pair address (option nat))) : option (pair address (option nat)) : @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens
                        GET 3;      # pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : option (pair address (option nat)) : @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens
                        GET;        # option (map nat (pair address (option nat))) : option (pair address (option nat)) : @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens
                        IF_NONE
                          {
                            PUSH int 64; # int : option (pair address (option nat)) : @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : option (pair address (option nat)) : @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens
                        SIZE;       # nat : option (pair address (option nat)) : @some : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens
                        UPDATE;     # map nat (pair address (option nat)) : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens
                        SOME;       # option (map nat (pair address (option nat))) : pair address nat : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens
                        SWAP;       # pair address nat : option (map nat (pair address (option nat))) : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens
                        UPDATE;     # big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens
                        SWAP;       # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens
                        PAIR;       # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens
                        PAIR;       # pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @parameter%registerTokens
                        SWAP;       # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat : nat : @parameter%registerTokens
                        PAIR;       # pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : nat : nat : @parameter%registerTokens
                        DUG 3;      # nat : nat : @parameter%registerTokens : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        # loop step # nat : nat : @parameter%registerTokens : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        PUSH nat 1; # nat : nat : nat : @parameter%registerTokens : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        ADD;        # nat : nat : @parameter%registerTokens : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DUP;        # nat : nat : nat : @parameter%registerTokens : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DUP 3;      # nat : nat : nat : nat : @parameter%registerTokens : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        COMPARE;    # int : nat : nat : @parameter%registerTokens : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GT;         # bool : nat : nat : @parameter%registerTokens : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                      }; # nat : nat : @parameter%registerTokens : @storage
                    DROP 2;     # @parameter%registerTokens : @storage
                  }
                  {
                    SWAP;       # @storage : @parameter%registerTokens
                    # self.data.poolsTokens[params.poolId] = params.tokens # @storage : @parameter%registerTokens
                    UNPAIR;     # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : @parameter%registerTokens
                    SWAP;       # pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    UNPAIR;     # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    UNPAIR;     # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    SWAP;       # big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    DUP 5;      # @parameter%registerTokens : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    GET 4;      # map nat (pair address (option nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    SOME;       # option (map nat (pair address (option nat))) : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    DUP 6;      # @parameter%registerTokens : option (map nat (pair address (option nat))) : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    GET 3;      # pair address nat : option (map nat (pair address (option nat))) : big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    UPDATE;     # big_map (pair address nat) (map nat (pair address (option nat))) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    SWAP;       # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    # self.data.poolsBalances[params.poolId] = sp.set_type_expr({}, sp.TMap(sp.TPair(sp.TAddress, sp.TOption(sp.TNat)), sp.TPair(sp.TNat, sp.TNat))) # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    PUSH (option (map (pair address (option nat)) (pair nat nat))) (Some {}); # option (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    DUP 6;      # @parameter%registerTokens : option (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    GET 3;      # pair address nat : option (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    UPDATE;     # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    PAIR;       # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    PAIR;       # pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @parameter%registerTokens
                    SWAP;       # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : @parameter%registerTokens
                    PAIR;       # pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : @parameter%registerTokens
                    SWAP;       # @parameter%registerTokens : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                  }; # @parameter%registerTokens : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                # sp.emit(sp.record(poolId = params.poolId, tokens = params.tokens), tag = "TokensRegistered") # @parameter%registerTokens : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                NIL operation; # list operation : @parameter%registerTokens : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                SWAP;       # @parameter%registerTokens : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                DUP;        # @parameter%registerTokens : @parameter%registerTokens : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                GET 4;      # map nat (pair address (option nat)) : @parameter%registerTokens : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                SWAP;       # @parameter%registerTokens : map nat (pair address (option nat)) : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                GET 3;      # pair address nat : map nat (pair address (option nat)) : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                PAIR;       # pair (pair address nat) (map nat (pair address (option nat))) : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                EMIT %TokensRegistered (pair (pair %poolId address nat) (map %tokens nat (pair address (option nat)))); # operation : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                CONS;       # list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
              }; # list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
          }
          {
            IF_LEFT
              {
                DIG 2;      # lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%set_paused : @storage
                DROP;       # @parameter%set_paused : @storage
                # == set_paused ==
                # sp.verify(self.data.admin == sp.set_type_expr(sp.sender, sp.TAddress), 'ONLY_ADMIN') # @parameter%set_paused : @storage
                SENDER;     # @sender : @parameter%set_paused : @storage
                DUP 3;      # @storage : @sender : @parameter%set_paused : @storage
                CAR;        # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @sender : @parameter%set_paused : @storage
                CAR;        # pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit) : @sender : @parameter%set_paused : @storage
                CAR;        # address : @sender : @parameter%set_paused : @storage
                COMPARE;    # int : @parameter%set_paused : @storage
                EQ;         # bool : @parameter%set_paused : @storage
                IF
                  {}
                  {
                    PUSH string "ONLY_ADMIN"; # string : @parameter%set_paused : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%set_paused : @storage
                # self.data.settings.paused = params # @parameter%set_paused : @storage
                UPDATE 6;   # @storage
                NIL operation; # list operation : @storage
              }
              {
                IF_LEFT
                  {
                    DIG 2;      # lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%swap : @storage
                    DROP;       # @parameter%swap : @storage
                    # == swap ==
                    # sp.verify(self.data.settings.paused == False, 'ONLY_UNPAUSED') # @parameter%swap : @storage
                    PUSH bool False; # bool : @parameter%swap : @storage
                    DUP 3;      # @storage : bool : @parameter%swap : @storage
                    GET 6;      # bool : bool : @parameter%swap : @storage
                    COMPARE;    # int : @parameter%swap : @storage
                    EQ;         # bool : @parameter%swap : @storage
                    IF
                      {}
                      {
                        PUSH string "ONLY_UNPAUSED"; # string : @parameter%swap : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%swap : @storage
                    # sp.verify(sp.now <= params.deadline, 508) # @parameter%swap : @storage
                    DUP;        # @parameter%swap : @parameter%swap : @storage
                    CAR;        # pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender)) : @parameter%swap : @storage
                    CAR;        # timestamp : @parameter%swap : @storage
                    NOW;        # @now : timestamp : @parameter%swap : @storage
                    COMPARE;    # int : @parameter%swap : @storage
                    LE;         # bool : @parameter%swap : @storage
                    IF
                      {}
                      {
                        PUSH int 508; # int : @parameter%swap : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%swap : @storage
                    # sp.verify(params.singleSwap.amount > 0, 510) # @parameter%swap : @storage
                    PUSH nat 0; # nat : @parameter%swap : @storage
                    DUP 2;      # @parameter%swap : nat : @parameter%swap : @storage
                    GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : nat : @parameter%swap : @storage
                    CAR;        # nat : nat : @parameter%swap : @storage
                    COMPARE;    # int : @parameter%swap : @storage
                    GT;         # bool : @parameter%swap : @storage
                    IF
                      {}
                      {
                        PUSH int 510; # int : @parameter%swap : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%swap : @storage
                    # sp.verify(params.singleSwap.assetIn != params.singleSwap.assetOut, 509) # @parameter%swap : @storage
                    DUP;        # @parameter%swap : @parameter%swap : @storage
                    GET 7;      # pair address (option nat) : @parameter%swap : @storage
                    DUP 2;      # @parameter%swap : pair address (option nat) : @parameter%swap : @storage
                    GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : pair address (option nat) : @parameter%swap : @storage
                    CDR;        # pair address (option nat) : pair address (option nat) : @parameter%swap : @storage
                    COMPARE;    # int : @parameter%swap : @storage
                    NEQ;        # bool : @parameter%swap : @storage
                    IF
                      {}
                      {
                        PUSH int 509; # int : @parameter%swap : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%swap : @storage
                    # compute_Swaps_260 = sp.local("compute_Swaps_260", sp.view("onSwap", sp.record(balanceTokenIn = sp.fst(self.data.poolsBalances.get(params.singleSwap.poolId, message = 500).get(params.singleSwap.assetIn, message = 521)) + sp.snd(self.data.poolsBalances.get(params.singleSwap.poolId, message = 500).get(params.singleSwap.assetIn, message = 521)), balanceTokenOut = sp.fst(self.data.poolsBalances.get(params.singleSwap.poolId, message = 500).get(params.singleSwap.assetOut, message = 521)) + sp.snd(self.data.poolsBalances.get(params.singleSwap.poolId, message = 500).get(params.singleSwap.assetOut, message = 521)), request = sp.record(amount = params.singleSwap.amount, kind = params.singleSwap.kind, tokenIn = params.singleSwap.assetIn, tokenOut = params.singleSwap.assetOut)), sp.fst(params.singleSwap.poolId), sp.TNat).open_some(message = 'Invalid view')) # @parameter%swap : @storage
                    DUP;        # @parameter%swap : @parameter%swap : @storage
                    GET 11;     # address : @parameter%swap : @storage
                    DUP 2;      # @parameter%swap : address : @parameter%swap : @storage
                    GET 7;      # pair address (option nat) : address : @parameter%swap : @storage
                    DUP 3;      # @parameter%swap : pair address (option nat) : address : @parameter%swap : @storage
                    GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : pair address (option nat) : address : @parameter%swap : @storage
                    CDR;        # pair address (option nat) : pair address (option nat) : address : @parameter%swap : @storage
                    PAIR;       # pair (pair address (option nat)) (pair address (option nat)) : address : @parameter%swap : @storage
                    DUP 3;      # @parameter%swap : pair (pair address (option nat)) (pair address (option nat)) : address : @parameter%swap : @storage
                    GET 9;      # string : pair (pair address (option nat)) (pair address (option nat)) : address : @parameter%swap : @storage
                    DUP 4;      # @parameter%swap : string : pair (pair address (option nat)) (pair address (option nat)) : address : @parameter%swap : @storage
                    GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : string : pair (pair address (option nat)) (pair address (option nat)) : address : @parameter%swap : @storage
                    CAR;        # nat : string : pair (pair address (option nat)) (pair address (option nat)) : address : @parameter%swap : @storage
                    PAIR;       # pair nat string : pair (pair address (option nat)) (pair address (option nat)) : address : @parameter%swap : @storage
                    PAIR;       # pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    DUP 4;      # @storage : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    DUP 4;      # @parameter%swap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET 10;     # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    IF_NONE
                      {
                        PUSH int 500; # int : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    DUP 4;      # @parameter%swap : @some : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET 7;      # pair address (option nat) : @some : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET;        # option (pair nat nat) : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    IF_NONE
                      {
                        PUSH int 521; # int : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    CDR;        # nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    DUP 5;      # @storage : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    DUP 5;      # @parameter%swap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET 10;     # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    IF_NONE
                      {
                        PUSH int 500; # int : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    DUP 5;      # @parameter%swap : @some : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET 7;      # pair address (option nat) : @some : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET;        # option (pair nat nat) : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    IF_NONE
                      {
                        PUSH int 521; # int : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    CAR;        # nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    ADD;        # nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    DUP 5;      # @storage : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    DUP 5;      # @parameter%swap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET 10;     # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    IF_NONE
                      {
                        PUSH int 500; # int : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    DUP 5;      # @parameter%swap : @some : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : @some : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    CDR;        # pair address (option nat) : @some : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET;        # option (pair nat nat) : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    IF_NONE
                      {
                        PUSH int 521; # int : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    CDR;        # nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    DUP 6;      # @storage : nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    DUP 6;      # @parameter%swap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET 10;     # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    IF_NONE
                      {
                        PUSH int 500; # int : nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    DUP 6;      # @parameter%swap : @some : nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : @some : nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    CDR;        # pair address (option nat) : @some : nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    GET;        # option (pair nat nat) : nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    IF_NONE
                      {
                        PUSH int 521; # int : nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    CAR;        # nat : nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    ADD;        # nat : nat : pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))) : address : @parameter%swap : @storage
                    PAIR 3;     # pair nat (pair nat (pair (pair nat string) (pair (pair address (option nat)) (pair address (option nat))))) : address : @parameter%swap : @storage
                    VIEW "onSwap" nat; # option nat : @parameter%swap : @storage
                    IF_NONE
                      {
                        PUSH string "Invalid view"; # string : @parameter%swap : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%swap : @storage
                    # compute_Swaps_263 = sp.local("compute_Swaps_263", sp.eif(params.singleSwap.kind == 'GIVEN_IN', (params.singleSwap.amount, compute_Swaps_260.value), (compute_Swaps_260.value, params.singleSwap.amount))) # @some : @parameter%swap : @storage
                    PUSH string "GIVEN_IN"; # string : @some : @parameter%swap : @storage
                    DUP 3;      # @parameter%swap : string : @some : @parameter%swap : @storage
                    GET 9;      # string : string : @some : @parameter%swap : @storage
                    COMPARE;    # int : @some : @parameter%swap : @storage
                    EQ;         # bool : @some : @parameter%swap : @storage
                    IF
                      {
                        DUP;        # @some : @some : @parameter%swap : @storage
                        DUP 3;      # @parameter%swap : @some : @some : @parameter%swap : @storage
                        GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : @some : @some : @parameter%swap : @storage
                        CAR;        # nat : @some : @some : @parameter%swap : @storage
                        PAIR;       # pair nat @some : @some : @parameter%swap : @storage
                      }
                      {
                        DUP 2;      # @parameter%swap : @some : @parameter%swap : @storage
                        GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : @some : @parameter%swap : @storage
                        CAR;        # nat : @some : @parameter%swap : @storage
                        DUP 2;      # @some : nat : @some : @parameter%swap : @storage
                        PAIR;       # pair @some nat : @some : @parameter%swap : @storage
                      }; # pair nat nat : @some : @parameter%swap : @storage
                    # match_pair_Swaps_263_fst, match_pair_Swaps_263_snd = sp.match_tuple(compute_Swaps_263.value, "match_pair_Swaps_263_fst", "match_pair_Swaps_263_snd") # pair nat nat : @some : @parameter%swap : @storage
                    UNPAIR;     # nat : nat : @some : @parameter%swap : @storage
                    # self.data.poolsBalances[params.singleSwap.poolId][params.singleSwap.assetIn] = (sp.fst(self.data.poolsBalances.get(params.singleSwap.poolId, message = 500).get(params.singleSwap.assetIn, message = 521)) + match_pair_Swaps_263_fst, sp.snd(self.data.poolsBalances.get(params.singleSwap.poolId, message = 500).get(params.singleSwap.assetIn, message = 521))) # nat : nat : @some : @parameter%swap : @storage
                    DUP 5;      # @storage : nat : nat : @some : @parameter%swap : @storage
                    UNPAIR;     # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat : nat : @some : @parameter%swap : @storage
                    SWAP;       # pair (pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    UNPAIR;     # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    UNPAIR;     # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    DUP;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    DUP 9;      # @parameter%swap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    GET 10;     # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    DUP;        # pair address nat : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    DUG 2;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    IF_NONE
                      {
                        PUSH int 238; # int : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    DUP 11;     # @storage : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    DUP 11;     # @parameter%swap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    GET 10;     # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    IF_NONE
                      {
                        PUSH int 500; # int : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    DUP 11;     # @parameter%swap : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    CDR;        # pair address (option nat) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    GET;        # option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    IF_NONE
                      {
                        PUSH int 521; # int : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    CDR;        # nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : nat : @some : @parameter%swap : @storage
                    DIG 7;      # nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : @storage
                    DIG 11;     # @storage : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    DUP 12;     # @parameter%swap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    GET 10;     # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    IF_NONE
                      {
                        PUSH int 500; # int : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    DUP 12;     # @parameter%swap : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    CDR;        # pair address (option nat) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    GET;        # option (pair nat nat) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    IF_NONE
                      {
                        PUSH int 521; # int : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    CAR;        # nat : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    ADD;        # nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    PAIR;       # pair nat nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    SOME;       # option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    DUP 10;     # @parameter%swap : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    CDR;        # pair address (option nat) : option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    UPDATE;     # map (pair address (option nat)) (pair nat nat) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    SOME;       # option (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    SWAP;       # pair address nat : option (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    UPDATE;     # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    PAIR;       # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    PAIR;       # pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap
                    SWAP;       # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat : @some : @parameter%swap
                    PAIR;       # pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : nat : @some : @parameter%swap
                    DUG 3;      # nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    # self.data.poolsBalances[params.singleSwap.poolId][params.singleSwap.assetOut] = (sp.as_nat(sp.fst(self.data.poolsBalances.get(params.singleSwap.poolId, message = 500).get(params.singleSwap.assetOut, message = 521)) - match_pair_Swaps_263_snd), sp.snd(self.data.poolsBalances.get(params.singleSwap.poolId, message = 500).get(params.singleSwap.assetOut, message = 521))) # nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 4;      # pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    UNPAIR;     # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    SWAP;       # pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    UNPAIR;     # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    UNPAIR;     # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 8;      # @parameter%swap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET 10;     # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP;        # pair address nat : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUG 2;      # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    IF_NONE
                      {
                        PUSH int 239; # int : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 10;     # pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET 3;      # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 10;     # @parameter%swap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET 10;     # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    IF_NONE
                      {
                        PUSH int 500; # int : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 10;     # @parameter%swap : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET 7;      # pair address (option nat) : @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET;        # option (pair nat nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    IF_NONE
                      {
                        PUSH int 521; # int : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    CDR;        # nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DIG 7;      # nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DIG 10;     # pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    GET 3;      # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    DUP 11;     # @parameter%swap : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    GET 10;     # pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    GET;        # option (map (pair address (option nat)) (pair nat nat)) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    IF_NONE
                      {
                        PUSH int 500; # int : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    DUP 11;     # @parameter%swap : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    GET 7;      # pair address (option nat) : @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    GET;        # option (pair nat nat) : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    IF_NONE
                      {
                        PUSH int 521; # int : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    CAR;        # nat : nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    SUB;        # int : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    ISNAT;      # option nat : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    IF_NONE
                      {
                        PUSH int 272; # int : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    PAIR;       # pair @some nat : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    SOME;       # option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    DUP 9;      # @parameter%swap : option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    GET 7;      # pair address (option nat) : option (pair @some nat) : @some : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    UPDATE;     # map (pair address (option nat)) (pair nat nat) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    SOME;       # option (map (pair address (option nat)) (pair nat nat)) : pair address nat : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    SWAP;       # pair address nat : option (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    UPDATE;     # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : big_map (pair address nat) (map nat (pair address (option nat))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    PAIR;       # pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat)))) : pair (option %proposed_admin address) (bool %settings) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    PAIR;       # pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @some : @parameter%swap
                    SWAP;       # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)) : @some : @parameter%swap
                    PAIR;       # pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings))) : @some : @parameter%swap
                    DUG 2;      # @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    # match_pair_Swaps_207_fst, match_pair_Swaps_207_snd = sp.match_tuple(sp.eif(params.singleSwap.kind == 'GIVEN_IN', (params.singleSwap.amount, compute_Swaps_260.value), (compute_Swaps_260.value, params.singleSwap.amount)), "match_pair_Swaps_207_fst", "match_pair_Swaps_207_snd") # @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    PUSH string "GIVEN_IN"; # string : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 3;      # @parameter%swap : string : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET 9;      # string : string : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    COMPARE;    # int : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    EQ;         # bool : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    IF
                      {
                        DUP 2;      # @parameter%swap : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CAR;        # nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        PAIR;       # pair nat @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                      }
                      {
                        DUP 2;      # @parameter%swap : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CAR;        # nat : @some : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        SWAP;       # @some : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        PAIR;       # pair @some nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                      }; # pair nat nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    UNPAIR;     # nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    # sp.emit(sp.record(amountIn = match_pair_Swaps_207_fst, amountOut = match_pair_Swaps_207_snd, poolId = params.singleSwap.poolId, tokenIn = (sp.fst(params.singleSwap.assetIn), sp.snd(params.singleSwap.assetIn)), tokenOut = (sp.fst(params.singleSwap.assetOut), sp.snd(params.singleSwap.assetOut))), tag = "Swap") # nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    NIL operation; # list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 4;      # @parameter%swap : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET 7;      # pair address (option nat) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    CDR;        # option nat : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 5;      # @parameter%swap : option nat : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET 7;      # pair address (option nat) : option nat : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    CAR;        # address : option nat : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    PAIR;       # pair address (option nat) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 5;      # @parameter%swap : pair address (option nat) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : pair address (option nat) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET 4;      # option nat : pair address (option nat) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 6;      # @parameter%swap : option nat : pair address (option nat) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : option nat : pair address (option nat) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET 3;      # address : option nat : pair address (option nat) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    PAIR;       # pair address (option nat) : pair address (option nat) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    PAIR;       # pair (pair address (option nat)) (pair address (option nat)) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 5;      # @parameter%swap : pair (pair address (option nat)) (pair address (option nat)) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET 10;     # pair address nat : pair (pair address (option nat)) (pair address (option nat)) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    PAIR;       # pair (pair address nat) (pair (pair address (option nat)) (pair address (option nat))) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 4;      # nat : pair (pair address nat) (pair (pair address (option nat)) (pair address (option nat))) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 4;      # nat : nat : pair (pair address nat) (pair (pair address (option nat)) (pair address (option nat))) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    PAIR;       # pair nat nat : pair (pair address nat) (pair (pair address (option nat)) (pair address (option nat))) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    PAIR;       # pair (pair nat nat) (pair (pair address nat) (pair (pair address (option nat)) (pair address (option nat)))) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    EMIT %Swap (pair (pair (nat %amountIn) (nat %amountOut)) (pair (pair %poolId address nat) (pair (pair %tokenIn address (option nat)) (pair %tokenOut address (option nat))))); # operation : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    CONS;       # list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    # sp.verify(sp.eif(params.singleSwap.kind == 'GIVEN_IN', match_pair_Swaps_207_snd >= params.limit, match_pair_Swaps_207_fst <= params.limit), 507) # list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    PUSH string "GIVEN_IN"; # string : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 5;      # @parameter%swap : string : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET 9;      # string : string : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    COMPARE;    # int : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    EQ;         # bool : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    IF
                      {
                        DUP 4;      # @parameter%swap : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 3;      # nat : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DUP 4;      # nat : nat : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        COMPARE;    # int : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GE;         # bool : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                      }
                      {
                        DUP 4;      # @parameter%swap : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 3;      # nat : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DUP 3;      # nat : nat : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        COMPARE;    # int : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        LE;         # bool : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                      }; # bool : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    IF
                      {}
                      {
                        PUSH int 507; # int : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        FAILWITH;   # FAILED
                      }; # list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    # sp.verify(match_pair_Swaps_207_fst > 0, 'Zero_Transfer') # list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    PUSH nat 0; # nat : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 3;      # nat : nat : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    COMPARE;    # int : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GT;         # bool : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    IF
                      {}
                      {
                        PUSH string "Zero_Transfer"; # string : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        FAILWITH;   # FAILED
                      }; # list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    # if sp.snd(params.singleSwap.assetIn) != sp.none: # list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    NONE nat;   # option nat : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 5;      # @parameter%swap : option nat : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : option nat : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET 4;      # option nat : option nat : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    COMPARE;    # int : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    NEQ;        # bool : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    IF
                      {
                        # sp.transfer(sp.list([sp.record(from_ = params.funds.sender, txs = sp.list([sp.record(amount = match_pair_Swaps_207_fst, to_ = sp.self_address, token_id = sp.snd(params.singleSwap.assetIn).open_some())]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), sp.fst(params.singleSwap.assetIn), entrypoint='transfer').open_some()) # list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DUP 4;      # @parameter%swap : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 3;      # address : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        IF_NONE
                          {
                            PUSH int 32; # int : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        PUSH mutez 0; # mutez : @some : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DIG 5;      # nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DUP 8;      # @parameter%swap : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 4;      # option nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        IF_NONE
                          {
                            PUSH int 82; # int : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        SELF_ADDRESS; # @self : @some : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        PAIR 3;     # pair @self (pair @some nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DUP 7;      # @parameter%swap : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CAR;        # pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender)) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 4;      # address : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        PAIR;       # pair address (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        TRANSFER_TOKENS; # operation : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CONS;       # list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                      }
                      {
                        # sp.transfer(sp.record(from_ = params.funds.sender, to_ = sp.self_address, value = match_pair_Swaps_207_fst), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), sp.fst(params.singleSwap.assetIn), entrypoint='transfer').open_some()) # list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DUP 4;      # @parameter%swap : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 5;      # pair (nat %amount) (pair %assetIn address (option nat)) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 3;      # address : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        IF_NONE
                          {
                            PUSH int 56; # int : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        PUSH mutez 0; # mutez : @some : list operation : nat : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DIG 3;      # nat : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        SELF_ADDRESS; # @self : nat : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DUP 7;      # @parameter%swap : @self : nat : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CAR;        # pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender)) : @self : nat : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 4;      # address : @self : nat : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        PAIR 3;     # pair address (pair @self nat) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        TRANSFER_TOKENS; # operation : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CONS;       # list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                      }; # list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    # sp.verify(match_pair_Swaps_207_snd > 0, 'Zero_Transfer') # list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    PUSH nat 0; # nat : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 3;      # nat : nat : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    COMPARE;    # int : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GT;         # bool : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    IF
                      {}
                      {
                        PUSH string "Zero_Transfer"; # string : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        FAILWITH;   # FAILED
                      }; # list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    # if sp.snd(params.singleSwap.assetOut) != sp.none: # list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    NONE nat;   # option nat : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    DUP 4;      # @parameter%swap : option nat : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    GET 7;      # pair address (option nat) : option nat : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    CDR;        # option nat : option nat : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    COMPARE;    # int : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    NEQ;        # bool : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                    IF
                      {
                        # sp.transfer(sp.list([sp.record(from_ = sp.self_address, txs = sp.list([sp.record(amount = match_pair_Swaps_207_snd, to_ = params.funds.recipient, token_id = sp.snd(params.singleSwap.assetOut).open_some())]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), sp.fst(params.singleSwap.assetOut), entrypoint='transfer').open_some()) # list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DUP 3;      # @parameter%swap : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 7;      # pair address (option nat) : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CAR;        # address : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        IF_NONE
                          {
                            PUSH int 32; # int : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        PUSH mutez 0; # mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DIG 5;      # nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DUP 7;      # @parameter%swap : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 7;      # pair address (option nat) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CDR;        # option nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        IF_NONE
                          {
                            PUSH int 82; # int : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DIG 7;      # @parameter%swap : @some : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CAR;        # pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender)) : @some : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 3;      # address : @some : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        PAIR 3;     # pair address (pair @some nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        SELF_ADDRESS; # @self : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        PAIR;       # pair @self (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CONS;       # list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                      }
                      {
                        # sp.transfer(sp.record(from_ = sp.self_address, to_ = params.funds.recipient, value = match_pair_Swaps_207_snd), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), sp.fst(params.singleSwap.assetOut), entrypoint='transfer').open_some()) # list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DUP 3;      # @parameter%swap : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 7;      # pair address (option nat) : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CAR;        # address : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        IF_NONE
                          {
                            PUSH int 56; # int : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        PUSH mutez 0; # mutez : @some : list operation : nat : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DIG 3;      # nat : mutez : @some : list operation : @parameter%swap : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        DIG 4;      # @parameter%swap : nat : mutez : @some : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CAR;        # pair (timestamp %deadline) (pair %funds (address %recipient) (address %sender)) : nat : mutez : @some : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        GET 3;      # address : nat : mutez : @some : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        SELF_ADDRESS; # @self : address : nat : mutez : @some : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        PAIR 3;     # pair @self (pair address nat) : mutez : @some : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                        CONS;       # list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                      }; # list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
                  }
                  {
                    DIG 2;      # lambda (pair (pair (map nat (pair address (option nat))) (pair (map nat nat) (pair address nat))) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) (pair (map nat (pair nat nat)) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))) : @parameter%transfer_admin : @storage
                    DROP;       # @parameter%transfer_admin : @storage
                    # == transfer_admin ==
                    # sp.verify(self.data.admin == sp.set_type_expr(sp.sender, sp.TAddress), 'ONLY_ADMIN') # @parameter%transfer_admin : @storage
                    SENDER;     # @sender : @parameter%transfer_admin : @storage
                    DUP 3;      # @storage : @sender : @parameter%transfer_admin : @storage
                    CAR;        # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce)) : @sender : @parameter%transfer_admin : @storage
                    CAR;        # pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit) : @sender : @parameter%transfer_admin : @storage
                    CAR;        # address : @sender : @parameter%transfer_admin : @storage
                    COMPARE;    # int : @parameter%transfer_admin : @storage
                    EQ;         # bool : @parameter%transfer_admin : @storage
                    IF
                      {}
                      {
                        PUSH string "ONLY_ADMIN"; # string : @parameter%transfer_admin : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%transfer_admin : @storage
                    # self.data.proposed_admin = sp.some(params) # @parameter%transfer_admin : @storage
                    SOME;       # option address : @storage
                    UPDATE 5;   # @storage
                    NIL operation; # list operation : @storage
                  }; # list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
              }; # list operation : pair (pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
          }; # list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option %proposed_admin address) (bool %settings)))
      }; # list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
    NIL operation; # list operation : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
    SWAP;       # list operation : list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
    ITER
      {
        CONS;       # list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
      }; # list operation : pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool))
    PAIR;       # pair (list operation) (pair (pair (pair address (big_map (pair address nat) unit)) (pair (big_map string bytes) nat)) (pair (pair (big_map (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map (pair address nat) (map nat (pair address (option nat))))) (pair (option address) bool)))
  };
view
  "getNextPoolNonce" unit nat
  {
    CDR;        # @storage
    # sp.result(self.data.nextPoolNonce) # @storage
    CAR;        # pair (pair (address %admin) (big_map %isPoolRegistered (pair address nat) unit)) (pair (big_map %metadata string bytes) (nat %nextPoolNonce))
    GET 4;      # nat
  };
view
  "getPoolTokens" (pair address nat) (pair (map nat (pair address (option nat))) (map nat nat))
  {
    UNPAIR;     # @parameter : @storage
    # compute_PoolTokens_91 = sp.local("compute_PoolTokens_91", {}, sp.TMap(sp.TNat, sp.TPair(sp.TAddress, sp.TOption(sp.TNat)))) # @parameter : @storage
    EMPTY_MAP nat (pair address (option nat)); # map nat (pair address (option nat)) : @parameter : @storage
    # compute_PoolTokens_92 = sp.local("compute_PoolTokens_92", {}, sp.TMap(sp.TNat, sp.TPair(sp.TNat, sp.TNat))) # map nat (pair address (option nat)) : @parameter : @storage
    EMPTY_MAP nat (pair nat nat); # map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    # for i in sp.range(0, sp.len(self.data.poolsTokens[params])): ... (sp.TNat) # map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    DUP 4;      # @storage : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    CDR;        # big_map (pair address nat) (map nat (pair address (option nat))) : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    DUP 4;      # @parameter : big_map (pair address nat) (map nat (pair address (option nat))) : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    GET;        # option (map nat (pair address (option nat))) : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    IF_NONE
      {
        PUSH int 90; # int : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        FAILWITH;   # FAILED
      }
      {}; # @some : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    SIZE;       # nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    PUSH nat 0; # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    DUP;        # nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    DUP 3;      # nat : nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    COMPARE;    # int : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    GT;         # bool : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    LOOP
      {
        # compute_PoolTokens_91.value[i] = self.data.poolsTokens[params][i] # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        DIG 3;      # map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : @parameter : @storage
        DUP 6;      # @storage : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : @parameter : @storage
        GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : @parameter : @storage
        CDR;        # big_map (pair address nat) (map nat (pair address (option nat))) : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : @parameter : @storage
        DUP 6;      # @parameter : big_map (pair address nat) (map nat (pair address (option nat))) : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : @parameter : @storage
        GET;        # option (map nat (pair address (option nat))) : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : @parameter : @storage
        IF_NONE
          {
            PUSH int 90; # int : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : @parameter : @storage
            FAILWITH;   # FAILED
          }
          {}; # @some : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : @parameter : @storage
        DUP 3;      # nat : @some : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : @parameter : @storage
        GET;        # option (pair address (option nat)) : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : @parameter : @storage
        IF_NONE
          {
            PUSH int 96; # int : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : @parameter : @storage
            FAILWITH;   # FAILED
          }
          {}; # @some : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : @parameter : @storage
        SOME;       # option (pair address (option nat)) : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : @parameter : @storage
        DUP 3;      # nat : option (pair address (option nat)) : map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : @parameter : @storage
        UPDATE;     # map nat (pair address (option nat)) : nat : nat : map nat (pair nat nat) : @parameter : @storage
        DUG 3;      # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        # compute_PoolTokens_92.value[i] = self.data.poolsBalances.get(params, default_value = {}).get(self.data.poolsTokens[params][i], default_value = (0, 0)) # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        DIG 2;      # map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        DUP 6;      # @storage : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        CAR;        # big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        DUP 6;      # @parameter : big_map (pair address nat) (map (pair address (option nat)) (pair nat nat)) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        GET;        # option (map (pair address (option nat)) (pair nat nat)) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        IF_NONE
          {
            EMPTY_MAP (pair address (option nat)) (pair nat nat); # map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
          }
          {}; # map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        DUP 7;      # @storage : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        GET 3;      # pair (big_map %poolsBalances (pair address nat) (map (pair address (option nat)) (pair nat nat))) (big_map %poolsTokens (pair address nat) (map nat (pair address (option nat)))) : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        CDR;        # big_map (pair address nat) (map nat (pair address (option nat))) : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        DUP 7;      # @parameter : big_map (pair address nat) (map nat (pair address (option nat))) : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        GET;        # option (map nat (pair address (option nat))) : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        IF_NONE
          {
            PUSH int 90; # int : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
            FAILWITH;   # FAILED
          }
          {}; # @some : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        DUP 4;      # nat : @some : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        GET;        # option (pair address (option nat)) : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        IF_NONE
          {
            PUSH int 96; # int : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
            FAILWITH;   # FAILED
          }
          {}; # @some : map (pair address (option nat)) (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        GET;        # option (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        IF_NONE
          {
            PUSH (pair nat nat) (Pair 0 0); # pair nat nat : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
          }
          {}; # pair nat nat : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        SOME;       # option (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        DUP 3;      # nat : option (pair nat nat) : map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        UPDATE;     # map nat (pair nat nat) : nat : nat : map nat (pair address (option nat)) : @parameter : @storage
        DUG 2;      # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        # loop step # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        PUSH nat 1; # nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        ADD;        # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        DUP;        # nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        DUP 3;      # nat : nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        COMPARE;    # int : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        GT;         # bool : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
      }; # nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    DROP 2;     # map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    # compute_BalanceAllocation_5 = sp.local("compute_BalanceAllocation_5", {}, sp.TMap(sp.TNat, sp.TNat)) # map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    EMPTY_MAP nat nat; # map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    # for i in sp.range(0, sp.len(compute_PoolTokens_92.value)): ... (sp.TNat) # map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    DUP 2;      # map nat (pair nat nat) : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    SIZE;       # nat : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    PUSH nat 0; # nat : nat : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    DUP;        # nat : nat : nat : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    DUP 3;      # nat : nat : nat : nat : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    COMPARE;    # int : nat : nat : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    GT;         # bool : nat : nat : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    LOOP
      {
        # compute_BalanceAllocation_5.value[i] = sp.fst(compute_PoolTokens_92.value[i]) + sp.snd(compute_PoolTokens_92.value[i]) # nat : nat : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        DIG 2;      # map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        DUP 4;      # map nat (pair nat nat) : map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        DUP 3;      # nat : map nat (pair nat nat) : map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        GET;        # option (pair nat nat) : map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        IF_NONE
          {
            PUSH int 8; # int : map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
            FAILWITH;   # FAILED
          }
          {}; # @some : map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        CDR;        # nat : map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        DUP 5;      # map nat (pair nat nat) : nat : map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        DUP 4;      # nat : map nat (pair nat nat) : nat : map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        GET;        # option (pair nat nat) : nat : map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        IF_NONE
          {
            PUSH int 8; # int : nat : map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
            FAILWITH;   # FAILED
          }
          {}; # @some : nat : map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        CAR;        # nat : nat : map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        ADD;        # nat : map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        SOME;       # option nat : map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        DUP 3;      # nat : option nat : map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        UPDATE;     # map nat nat : nat : nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        DUG 2;      # nat : nat : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        # loop step # nat : nat : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        PUSH nat 1; # nat : nat : nat : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        ADD;        # nat : nat : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        DUP;        # nat : nat : nat : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        DUP 3;      # nat : nat : nat : nat : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        COMPARE;    # int : nat : nat : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
        GT;         # bool : nat : nat : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
      }; # nat : nat : map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    DROP 2;     # map nat nat : map nat (pair nat nat) : map nat (pair address (option nat)) : @parameter : @storage
    SWAP;       # map nat (pair nat nat) : map nat nat : map nat (pair address (option nat)) : @parameter : @storage
    DROP;       # map nat nat : map nat (pair address (option nat)) : @parameter : @storage
    DIG 2;      # @parameter : map nat nat : map nat (pair address (option nat)) : @storage
    DROP;       # map nat nat : map nat (pair address (option nat)) : @storage
    DIG 2;      # @storage : map nat nat : map nat (pair address (option nat))
    DROP;       # map nat nat : map nat (pair address (option nat))
    SWAP;       # map nat (pair address (option nat)) : map nat nat
    # sp.result((compute_PoolTokens_91.value, compute_BalanceAllocation_5.value)) # map nat (pair address (option nat)) : map nat nat
    PAIR;       # pair (map nat (pair address (option nat))) (map nat nat)
  };